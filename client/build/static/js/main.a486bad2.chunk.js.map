{"version":3,"sources":["components/Television/frame.png","components/Television/family.jpg","components/Television/family2.jpg","components/Television/hoguma.jpg","components/Television/sunjae.jpg","components/Television/yoonmin.jpg","components/Television/index.js","actions/index.js","components/Article/index.js","components/Remocon/index.js","pages/Home/index.js","components/Intro/IntroTtile.js","components/Intro/IntroImage.js","components/Intro/IntroContext.js","components/Intro/IntroChat.js","pages/Intro/index.js","pages/Test/TestMain.js","components/Test/TestRadio.js","components/Test/ProgressBar.js","url/http.js","pages/Test/TestSurvey.js","pages/Test/TestRoading.js","components/Test/ResultTopSector.js","components/Test/ResultEmotionSector.js","components/Test/ResultMate.js","components/Test/ResultGraph.js","components/Test/ResultButton.js","pages/Test/TestResult.js","pages/Test/TestOverdoseMain.js","components/Test/WordItems.js","pages/Test/TestWord.js","components/Test/OverdoseTestQuestion.js","pages/Test/TestOverdose.js","components/Test/OverdoseContents.js","pages/Test/TestOverdoseResult.js","pages/Game/GameMain.js","components/Ball/index.js","components/Dialog/GameDialog.js","pages/Game/GameResult.js","components/Carousel/index.js","pages/Game/GameAll.js","components/Map/MapOrigin.js","components/Map/MapDA.js","components/Dialog/MapTooltip.js","components/Character/Chart.js","components/Character/index.js","pages/Characters/index.js","components/Navbar/index.js","App.js","reducers/homeSelect.js","reducers/game.js","reducers/test.js","reducers/character.js","reducers/index.js","index.js"],"names":["Container","styled","div","Frame","img","Photo","Television","isSelected","useSelector","state","homeSelect","Photos","family","hoguma","family2","sunjae","yoonmin","className","src","frame","alt","home","selected","type","gameClick","payload","gameShow","testUserName","name","testSurveyNumber","number","testCheckedWord","info","testWordCount","testEmotionCount","emotion","characterSelected","Article","dispatch","useDispatch","history","useHistory","ArticleData","id","title","description1","keyword","description2","button","url","split","map","line","index","Button","variant","color","style","width","marginLeft","marginTop","onClick","기쁨","슬픔","분노","push","SimpleBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","Home","MyTitle","h1","IntroTtile","IntroImgContainer","IntroImg","IntroImage","ContextStrong","strong","IntroParagraph","p","IntroContext","IntroChat","margin","textAlign","alignItems","maxHeight","overflowY","DiscussionEmbed","shortname","config","identifier","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","palette","text","secondary","border","About","classes","Grid","container","item","xs","Paper","TestTitle","TestParagraph","FormContainer","ContentContainer","TestMain","props","userName","test","onSubmit","console","log","noValidate","autoComplete","TextField","e","target","disabled","TestRadioContainer","TestLabel","TestRadioButton","input","TestRadio","emotionCount","useEffect","select1","setTimeout","checked","qNumber","htmlFor","select2","select3","BorderLinearProgress","withStyles","height","borderRadius","marginButton","colorPrimary","backgroundColor","grey","bar","LinearProgress","ProgressContainer","ProgressBar","baseUrl","ProcessImageContainer","SurveyQuestion","SurveyImage","TestSurvey","surveyData","setSurveyData","surveyNumber","axios","get","then","response","data","error","length","q_num","question","image_url","select","LoadingMention","h3","TestRoading","CircularProgress","TopSectorTitle","TopSectorImageContainer","TopSectorImage","TopSectorDescription","ResultTopSector","nickName","image","desc","MiddleSectorTitle","MiddleSectorContainer","MiddlesectorEmotionContainer","MiddleSectorImage","MiddleSectorDescription","ResultEmotionSector","total","userCharacterInfo","happy","Math","round","sadness","angry","MiddleMateSectorImage","MiddleMateSectorName","ResultMate","pair","BottomSectorContainer","BottomSectorTitle","BottomGraphDiv","ResultGraph","categories","series","characterName","characterEmotion","options","colors","tooltip","transition","chart","animation","duration","yAxis","min","max","xAxis","suffix","eventDetectType","showLabel","selectable","dataLabels","visible","anchor","legend","align","showCheckbox","paddingLeft","ButtonContainer","ResultPhargraph","HomeButtonLink","Link","onClickKakao","window","open","ResultButton","enqueueSnackbar","useSnackbar","location","href","Kakao","isInitialized","init","createDefaultButton","objectType","content","description","imageUrl","link","mobileWebUrl","webUrl","social","likeCount","commentCount","sharedCount","buttons","Fragment","to","TestResult","characterInfo","setCharacterInfo","params","joy","anger","Object","keys","nick_name","TestOverdoseMain","WordDiv","WordButton","WordButtonText","WordItems","wordCount","checkedWords","checkedWord","FormRow","isCheckedWord","wordID","flag","i","wordList","words","word","display","newCheckedWords","chip","WordTestTitle","WordSubmit","CheckedChips","li","TestWord","wordCounter","setWords","chipData","Array","isArray","component","Chip","onDelete","deleteChipKey","toString","newChipData","elevation","QuestionDiv","SelectDiv","Question","QuestionLabel","OverdoseTestQuestion","checkedCounter","select4","background","grid","borderRight","gridMobile","PageTitle","PageSubTitle","h2","TestOverdose","isMobile","useMediaQuery","overdoseQuestion","setOverdoseQuestion","isChecked","setIsChecked","CheckedCounter","checkedCount","document","querySelectorAll","backgroundImage","backgroundSize","justify","borderBottom","slice","qnum","borderTop","AnswerCount","querySelector","AnswerCounter","ImgContainer","ScoreDiv","ScoreImg","Score","ScoreText","ContentsDescription","OverdoseContents","answerCount","ResultTitle","MyLink","TestOverdoseResult","overdoseData","setOverdoseData","overdoseCount","paddingTop","GameMain","handleClick","Ball","game","random","class","data-number","DialogTitle","closeButton","position","right","top","children","onClose","other","disableTypography","Typography","IconButton","aria-label","DialogContent","MuiDialogContent","GameDialog","handleClose","Dialog","aria-labelledby","dividers","quote","nickname","gutterBottom","GameResult","flexDirection","justifyContent","objectFit","gacha_id","selectedDataHandler","Carousel","dispaly","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","responsive","breakpoint","settings","GameAll","click","show","source","MapOrigin","familyColor","schoolColor","friendColor","selector","elements","stylesheet","layout","animate","gravityRangeCompound","fit","tile","zoomingEnabled","boxSelectionEnabled","maxZoom","minZoom","cy","on","evt","node","MapDA","element","setElement","shape","setShape","edge_DA","forEach","x","String","connection_weight","weight_tag","Cytoscape","use","coseBilkent","FormDialog","setOpen","DialogContentText","FeelingChart","feelingChart","character","format","exportMenu","clockwise","radiusRange","inner","outer","AmountChart","amount","amountChart","scale","stepSize","Character","selectedId","setData","youtube","setYoutube","emotion_dict","stock_arr","boxSizing","age","clickable","job","qoute","word_cloud","overflow","paddingBottom","left","frameborder","allow","allowfullscreen","Characters","isDA","setIsDA","Transition","forwardRef","ref","Slide","direction","justifySelf","FormControlLabel","control","Switch","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Navbar","Nav","Logo","Menu","MenuLink","activeStyle","nav","App","exact","path","homeSelectReducer","action","gameReducer","key","quesiton","testReducer","page","characterReducer","fill","persistConfig","storage","whitelist","allReducers","combineReducers","persistReducer","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.a486bad2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/frame.0e8017d3.png\";","export default __webpack_public_path__ + \"static/media/family.e485a0d4.jpg\";","export default __webpack_public_path__ + \"static/media/family2.a10bd0b4.jpg\";","export default __webpack_public_path__ + \"static/media/hoguma.1f5a8449.jpg\";","export default __webpack_public_path__ + \"static/media/sunjae.5affc2e1.jpg\";","export default __webpack_public_path__ + \"static/media/yoonmin.64bf7344.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport frame from './frame.png';\r\nimport family from './family.jpg';\r\nimport family2 from './family2.jpg';\r\nimport hoguma from './hoguma.jpg';\r\nimport sunjae from './sunjae.jpg';\r\nimport yoonmin from './yoonmin.jpg';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 35vw;\r\n  height: 25vw;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 60vw;\r\n    height: 45vw;\r\n  }\r\n`;\r\n\r\nconst Frame = styled.img`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Photo = styled.img`\r\n  width: 85%;\r\n  height: 80%;\r\n  margin-left: 1%;\r\n  margin-top: 5%;\r\n  object-fit: contain;\r\n`;\r\n\r\nexport const Television = () => {\r\n  const isSelected = useSelector((state) => state.homeSelect);\r\n  const Photos = [family, hoguma, family2, sunjae, yoonmin];\r\n\r\n  return (\r\n    <Container>\r\n      <Frame className=\"tv-frame\" src={frame} alt=\"tv-frame\" />\r\n      <Photo\r\n        className=\"tv-frame\"\r\n        src={Photos[isSelected]}\r\n        alt=\"highkick-photo\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","export const home = (selected) => {\r\n  return {\r\n    type: 'HOME',\r\n    selected: selected,\r\n  };\r\n};\r\n\r\nexport const gameRandom = (payload) => {\r\n  return {\r\n    type: 'GAME_RANDOM',\r\n    payload, // API로 받아온 랜덤 숫자와 데이터 전체\r\n  };\r\n};\r\n\r\nexport const gameSelected = (payload) => {\r\n  return {\r\n    type: 'GAME_SELECTED',\r\n    payload, //뽑기게임 전체보기 페이지에서 유저가 선택한 사진에 해당하는 정보\r\n  };\r\n};\r\n\r\nexport const gameOpen = () => {\r\n  return {\r\n    type: 'GAME_OPEN', //뽑기게임 공 결과 페이지에서 공을 클릭하면 Dialog 열림\r\n  };\r\n};\r\n\r\nexport const gameClose = () => {\r\n  return {\r\n    type: 'GAME_CLOSE', //뽑기게임 공 결과 페이지에서 Dialog 닫힘\r\n  };\r\n};\r\n\r\nexport const gameClick = (payload) => {\r\n  return {\r\n    type: 'GAME_CLICK',\r\n    payload, //뽑기게임 전체보기 페이지에서 사진을 한번이라도 클릭함\r\n  };\r\n};\r\n\r\nexport const gameShow = (payload) => {\r\n  return {\r\n    type: 'GAME_SHOW',\r\n    payload, //뽑기게임 전체보기 페이지에서 정답보기/초기화\r\n  };\r\n};\r\n\r\nexport const testUserName = (name) => {\r\n  return {\r\n    type: 'TEST_USERNAME',\r\n    name,\r\n  };\r\n};\r\nexport const testPage = (payload) => {\r\n  return {\r\n    type: 'TEST_PAGE',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const testOverdoseCount = (number) => {\r\n  return {\r\n    type: 'TEST_OVERDOSECOUNT',\r\n    number,\r\n  };\r\n};\r\n\r\nexport const testSurveyNumber = (number) => {\r\n  return {\r\n    type: 'TEST_SURVEYNUMBER',\r\n    number,\r\n  };\r\n};\r\n\r\nexport const testCheckedWord = (info) => {\r\n  return {\r\n    type: 'TEST_CHECKED_WORD',\r\n    info,\r\n  };\r\n};\r\n\r\nexport const testWordCount = (number) => {\r\n  return {\r\n    type: 'TEST_WORD_COUNT',\r\n    number,\r\n  };\r\n};\r\n\r\nexport const testEmotionCount = (emotion) => {\r\n  return {\r\n    type: 'TEST_EMOTION_COUNT',\r\n    emotion,\r\n  };\r\n};\r\n\r\nexport const characterSelected = (payload) => {\r\n  return {\r\n    type: 'CHARACTER_SELECTED',\r\n    payload, //유저가 인물관계도에서 누른 인물 이름\r\n  };\r\n};\r\n\r\nexport const characterOpen = () => {\r\n  return {\r\n    type: 'CHARACTER_OPEN', //캐릭터 상세페이지 Dialog 열림\r\n  };\r\n};\r\n\r\nexport const characterClose = () => {\r\n  return {\r\n    type: 'CHARACTER_CLOSE', //캐릭터 상세페이지 Dialog 닫힘\r\n  };\r\n};\r\n\r\nexport const feelingChart = (payload) => {\r\n  return {\r\n    type: 'FEELING_CHART',\r\n    payload, //캐릭터별 기쁨, 슬픔, 분노\r\n  };\r\n};\r\n\r\nexport const amountChart = (payload) => {\r\n  return {\r\n    type: 'AMOUNT_CHART',\r\n    payload, //캐릭터별 회차별 분량\r\n  };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  testUserName,\r\n  testSurveyNumber,\r\n  testEmotionCount,\r\n  testWordCount,\r\n} from '../../actions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: left;\r\n  width: 25vw;\r\n  margin-left: 5vw;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 55vw;\r\n    font-size: 3vw;\r\n    align-items: center;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Article = () => {\r\n  const isSelected = useSelector((state) => state.homeSelect);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const ArticleData = [\r\n    {\r\n      id: 0,\r\n      title: '하이킥 완전정복',\r\n      description1: '방영 15주년을 맞이한 <br /> 대한민국 레전드 시트콤',\r\n      keyword: '거침없이 하이킥',\r\n      description2: '<br /> 그 모든 것을 분석했습니다.',\r\n      button: '입장하기',\r\n      url: '/about',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: '추억의 뽑기 게임',\r\n      description1: '41, 108, 690 <br /> 무슨 숫자인지 궁금하다면',\r\n      keyword: '아무도 몰랐던 하이킥',\r\n      description2: '정보를 <br /> 숫자를 뽑아 확인해보세요',\r\n      button: '시작하기',\r\n      url: '/game',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '나와 닮은 캐릭터는?',\r\n      description1: '하이킥의 수많은 캐릭터 중 <br /> 누가 가장 나와 비슷할지',\r\n      keyword: '데이터 분석',\r\n      description2: '에 기반한 <br /> 테스트로 한번 알아봅시다.',\r\n      button: '검사하기',\r\n      url: '/survey',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '하이킥 고사',\r\n      description1: '거침없이 하이킥에<br /> 얼마나 중독되었을까요? ',\r\n      keyword: '하이킥 고사',\r\n      description2: '를 풀어보고 <br /> 나의 등급을 알아보세요',\r\n      button: '응시하기',\r\n      url: '/overdose',\r\n    },\r\n\r\n    {\r\n      id: 4,\r\n      title: '하이킥 인물관계도',\r\n      description1: '얽히고 설킨 하이킥 속 <br /> 인물들의 관계가 궁금하다면',\r\n      keyword: '대본 분석',\r\n      description2: '으로 도출된 <br /> 하이킥 인물관계도를 살펴보세요',\r\n      button: '보러가기',\r\n      url: '/characters',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{ArticleData[isSelected].title}</h1>\r\n      <span>\r\n        {ArticleData[isSelected].description1\r\n          .split('<br />')\r\n          .map((line, index) => {\r\n            return (\r\n              <span key={index}>\r\n                {line}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        <b>{ArticleData[isSelected].keyword}</b>\r\n        {ArticleData[isSelected].description2\r\n          .split('<br />')\r\n          .map((line, index) => {\r\n            return (\r\n              <span key={index}>\r\n                {line}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n      </span>\r\n      <br />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{ width: '45%', marginLeft: '20%', marginTop: '5%' }}\r\n        onClick={() => {\r\n          dispatch(testUserName(''));\r\n          dispatch(testWordCount(0));\r\n          dispatch(testSurveyNumber(0));\r\n          dispatch(testEmotionCount({ 기쁨: 0, 슬픔: 0, 분노: 0 }));\r\n          history.push(ArticleData[isSelected].url);\r\n        }}\r\n      >\r\n        {ArticleData[isSelected].button}\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { BsCardChecklist, BsFillPersonCheckFill } from 'react-icons/bs';\r\nimport { IoGameControllerOutline } from 'react-icons/io5';\r\nimport { GiOrganigram } from 'react-icons/gi';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { home } from '../../actions';\r\n\r\nexport default function SimpleBottomNavigation() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n    >\r\n      <BottomNavigationAction\r\n        key={0}\r\n        label=\"홈\"\r\n        value=\"home\"\r\n        onClick={() => dispatch(home(0))}\r\n        icon={<AiOutlineHome />}\r\n      />\r\n      <BottomNavigationAction\r\n        key={1}\r\n        label=\"게임\"\r\n        value=\"game\"\r\n        onClick={() => dispatch(home(1))}\r\n        icon={<IoGameControllerOutline />}\r\n      />\r\n      <BottomNavigationAction\r\n        key={2}\r\n        label=\"캐릭터\"\r\n        value=\"character\"\r\n        onClick={() => dispatch(home(2))}\r\n        icon={<BsFillPersonCheckFill />}\r\n      />\r\n\r\n      <BottomNavigationAction\r\n        key={3}\r\n        label=\"고사\"\r\n        value=\"test\"\r\n        onClick={() => dispatch(home(3))}\r\n        icon={<BsCardChecklist />}\r\n      />\r\n\r\n      <BottomNavigationAction\r\n        key={4}\r\n        label=\"관계도\"\r\n        value=\"connection\"\r\n        onClick={() => dispatch(home(4))}\r\n        icon={<GiOrganigram />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Television } from '../../components/Television';\r\nimport { Article } from '../../components/Article';\r\nimport Remocon from '../../components/Remocon';\r\n\r\nconst Container = styled.div`\r\n  top: 10vh;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-basis: auto;\r\n  margin-bottom: 5vh;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Television />\r\n        <Article />\r\n      </Container>\r\n      <Container>\r\n        <Remocon />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MyTitle = styled.h1`\r\n  font-size: 5vh;\r\n  color: black;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 4vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 3vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 2.5vh;\r\n  }\r\n`;\r\n\r\nfunction IntroTtile() {\r\n  return (\r\n    <>\r\n      <MyTitle>하이킥 완전정복</MyTitle>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IntroTtile;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst IntroImgContainer = styled.div`\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: auto;\r\n`;\r\nconst IntroImg = styled.img`\r\n  width: 35vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 35vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    width: 35vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    width: 35vw;\r\n  }\r\n`;\r\n\r\nfunction IntroImage() {\r\n  return (\r\n    <>\r\n      <IntroImgContainer>\r\n        <IntroImg src=\"/images/introFamily.jpg\" alt=\"intro-img\" />\r\n      </IntroImgContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IntroImage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ContextStrong = styled.strong`\r\n  font-family: 'yangjin';\r\n  font-size: 1.8vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 1.4vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 1.2vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1vw;\r\n  }\r\n`;\r\nconst IntroParagraph = styled.p`\r\n  color: black;\r\n  font-size: 1.1vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 0.6vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 0.4vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 0.2vw;\r\n  }\r\n`;\r\nfunction IntroContext() {\r\n  return (\r\n    <div>\r\n      <IntroParagraph>\r\n        <ContextStrong>‘음~ 맛있다~’</ContextStrong> 라는 말을 들으면\r\n        <ContextStrong>‘마트다녀오셨어요~?’</ContextStrong> 라고\r\n        상황극을시작하시나요 ? <br />\r\n        호박고구마를 먹을때\r\n        <ContextStrong>‘호! 박! 고! 구! 마! 호박 고구마!!!’</ContextStrong> 라고\r\n        소리친적이 있으신가요 ? <br />\r\n        <ContextStrong>‘문의주세요’</ContextStrong> 라는 말에\r\n        <ContextStrong>‘문희는 포도가 먹고시푼데에~’</ContextStrong> 를 대답하고\r\n        싶었던 적이 있나요? <br />\r\n        그럼 제대로 찾아오셨습니다.\r\n        <br /> 방영 15주년을 맞이한 대한민국 레전드 시트콤 거침없이하이킥 <br />\r\n        그 모든 것을 분석했습니다. <br />\r\n        여러분들의 추억 상자를 열어보세요 !\r\n      </IntroParagraph>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IntroContext;\r\n","import React from 'react';\r\nimport Disqus from 'disqus-react';\r\n\r\nfunction IntroChat() {\r\n  const disqusShortname = 'hoguma';\r\n  const disqusConfig = {\r\n    url:\r\n      'http://elice-kdt-ai-track-vm-da-02.koreacentral.cloudapp.azure.com/about',\r\n    identifier: 'article-id',\r\n    title: '하이킥 완전정복',\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: '0 auto',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        maxHeight: '40vh',\r\n        overflowY: 'auto',\r\n      }}\r\n    >\r\n      <Disqus.DiscussionEmbed\r\n        shortname={disqusShortname}\r\n        config={disqusConfig}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IntroChat;\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport IntroTtile from '../../components/Intro/IntroTtile';\r\nimport IntroImage from '../../components/Intro/IntroImage';\r\nimport IntroContext from '../../components/Intro/IntroContext';\r\nimport IntroChat from '../../components/Intro/IntroChat';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: '0 20vw',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    border: '3px solid black',\r\n  },\r\n}));\r\n\r\nfunction About() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <IntroTtile />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <IntroImage />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <IntroContext />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <IntroChat />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { testUserName } from '../../actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport styled from 'styled-components';\r\n\r\n// 제목 컴포넌트\r\nconst TestTitle = styled.h1`\r\n  font-size: 3vw;\r\n  margin-top: 0;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n// 제목 설명 컴포넌트\r\nconst TestParagraph = styled.p`\r\n  font-size: 1.5vw;\r\n`;\r\n// 사용자 정보 & 버튼 컨테이너\r\nconst FormContainer = styled.div`\r\n  padding-top: 5vh;\r\n  padding-bottom: 5vh;\r\n`;\r\n// 콘텐츠 컨테이너\r\nconst ContentContainer = styled.div`\r\n  align-items: center; /* 세로에서 가운데에 요소를 배치하겠다 */\r\n  padding-top: 20vh;\r\n`;\r\n// 페이지 레이아웃 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  /* flex-direction: column; */\r\n  text-align: center;\r\n  background-color: white;\r\n  align-items: center; /* 세로에서 가운데에 요소를 배치하겠다 */\r\n  justify-content: center; /*가로에서 가운데에 요소(자식요소)를 배치하겠다*/\r\n  margin-left: 20vw;\r\n  margin-right: 20vw;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction TestMain(props) {\r\n  const userName = useSelector((state) => state.test.name);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(testUserName(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ContentContainer>\r\n        <TestTitle>나와 가장 닮은 캐릭터는 ?</TestTitle>\r\n        <TestParagraph>\r\n          여러분들이 사용하는 일상언어에는 모두 감정이 포함되어 있습니다.\r\n          <br />\r\n          본인의 감정언어와 가장 비슷한 하이킥 캐릭터가 궁금하시다면\r\n          <br />\r\n          아래 테스트를 진행해보세요.\r\n        </TestParagraph>\r\n        <FormContainer>\r\n          <form\r\n            onSubmit={() => console.log('테스트 시작.')}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n          >\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"이름을 입력해주세요.\"\r\n              name=\"name\"\r\n              value={userName}\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n        </FormContainer>\r\n\r\n        <Button\r\n          className={classes.button}\r\n          disabled={!userName}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            history.push('/survey/process');\r\n            //dispatch(testPage(2));\r\n          }}\r\n        >\r\n          검사진행\r\n        </Button>\r\n      </ContentContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TestMain;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { testSurveyNumber, testEmotionCount } from '../../actions';\r\n\r\nconst TestRadioContainer = styled.div`\r\n  margin-bottom: 0;\r\n`;\r\nconst TestLabel = styled.label`\r\n  display: block;\r\n  padding-top: 3vh;\r\n  height: 7vh;\r\n  border: 2px solid black;\r\n  border-radius: 30px;\r\n  margin: 1vw 2vh;\r\n  background-color: #dbdbdb;\r\n  font-size: 2vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    padding-top: 4vh;\r\n    font-size: 2vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    padding-top: 4vh;\r\n    font-size: 2vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    padding-top: 5vh;\r\n    font-size: 2vw;\r\n  }\r\n`;\r\nconst TestRadioButton = styled.input`\r\n  display: none;\r\n\r\n  &:checked + ${TestLabel} {\r\n    background: #ffc107;\r\n  }\r\n`;\r\n\r\nfunction TestRadio(props) {\r\n  const emotionCount = useSelector((state) => state.test.emotionCount);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {}, [emotionCount]);\r\n  return (\r\n    <TestRadioContainer>\r\n      <TestRadioButton\r\n        type=\"radio\"\r\n        id=\"radio1\"\r\n        value={props.select1[1]}\r\n        name=\"select-radio\"\r\n        onClick={(event) => {\r\n          setTimeout(() => (event.target.checked = false), 500);\r\n          if (props.qNumber < 9) {\r\n            dispatch(testSurveyNumber(props.qNumber + 1));\r\n            emotionCount[event.target.value] += 1;\r\n            dispatch(testEmotionCount(emotionCount));\r\n            // console.log(emotionCount);\r\n          } else {\r\n            dispatch(testSurveyNumber(props.qNumber + 1));\r\n            emotionCount[event.target.value] += 1;\r\n            dispatch(testEmotionCount(emotionCount));\r\n            // console.log(emotionCount);\r\n            history.push('/survey/word');\r\n          }\r\n        }}\r\n      />\r\n      <TestLabel htmlFor=\"radio1\">{props.select1[0]}</TestLabel>\r\n      <TestRadioButton\r\n        type=\"radio\"\r\n        id=\"radio2\"\r\n        value={props.select2[1]}\r\n        name=\"select-radio\"\r\n        onClick={(event) => {\r\n          setTimeout(() => (event.target.checked = false), 500);\r\n          if (props.qNumber < 9) {\r\n            dispatch(testSurveyNumber(props.qNumber + 1));\r\n            emotionCount[event.target.value] += 1;\r\n            dispatch(testEmotionCount(emotionCount));\r\n            // console.log(emotionCount);\r\n          } else {\r\n            dispatch(testSurveyNumber(props.qNumber + 1));\r\n            emotionCount[event.target.value] += 1;\r\n            dispatch(testEmotionCount(emotionCount));\r\n            // console.log(emotionCount);\r\n            history.push('/survey/word');\r\n          }\r\n        }}\r\n      />\r\n      <TestLabel htmlFor=\"radio2\">{props.select2[0]}</TestLabel>\r\n      <TestRadioButton\r\n        type=\"radio\"\r\n        id=\"radio3\"\r\n        value={props.select3[1]}\r\n        name=\"select-radio\"\r\n        onClick={(event) => {\r\n          setTimeout(() => (event.target.checked = false), 500);\r\n          if (props.qNumber < 9) {\r\n            dispatch(testSurveyNumber(props.qNumber + 1));\r\n            emotionCount[event.target.value] += 1;\r\n            dispatch(testEmotionCount(emotionCount));\r\n            // console.log(emotionCount);\r\n          } else {\r\n            dispatch(testSurveyNumber(props.qNumber + 1));\r\n            emotionCount[event.target.value] += 1;\r\n            dispatch(testEmotionCount(emotionCount));\r\n            // console.log(emotionCount);\r\n            history.push('/survey/word');\r\n          }\r\n        }}\r\n      />\r\n      <TestLabel htmlFor=\"radio3\">{props.select3[0]}</TestLabel>\r\n    </TestRadioContainer>\r\n  );\r\n}\r\n\r\nexport default TestRadio;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 15,\r\n    borderRadius: 20,\r\n    margin: '0 1vw',\r\n    marginButton: '2vh',\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor:\r\n      theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#a16ef5',\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst ProgressContainer = styled.div``;\r\n\r\nfunction ProgressBar(props) {\r\n  return (\r\n    <ProgressContainer>\r\n      <BorderLinearProgress\r\n        variant=\"determinate\"\r\n        value={(props.qNumber / 10) * 100}\r\n      />\r\n    </ProgressContainer>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","const baseUrl = 'http://3.34.97.89:5000/';\r\n\r\nexport default baseUrl;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TestRadio from '../../components/Test/TestRadio';\r\nimport ProgressBar from '../../components/Test/ProgressBar';\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    border: '4px solid black',\r\n  },\r\n}));\r\n\r\n// 페이지 레이아웃 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  /* flex-direction: column; */\r\n  text-align: center;\r\n  background-color: white;\r\n  align-items: center; /* 세로에서 가운데에 요소를 배치하겠다 */\r\n  justify-content: center; /*가로에서 가운데에 요소(자식요소)를 배치하겠다*/\r\n  margin-left: 20vw;\r\n  margin-right: 20vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    padding-top: 2vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    padding-top: 5vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    padding-top: 10vh;\r\n  }\r\n`;\r\nconst ContentContainer = styled.div`\r\n  align-items: center;\r\n`;\r\nconst ProcessImageContainer = styled.div`\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\nconst SurveyQuestion = styled.h1`\r\n  margin-bottom: 0;\r\n  font-size: 1.5vw;\r\n\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 1.5vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 2vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 2vw;\r\n  }\r\n`;\r\nconst SurveyImage = styled.img`\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 50vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    width: 50vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    width: 50vw;\r\n  }\r\n`;\r\nfunction TestSurvey() {\r\n  const [surveyData, setSurveyData] = useState([]);\r\n  const qNumber = useSelector((state) => state.test.surveyNumber);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios.get(baseUrl + 'test/survey').then((response) => {\r\n        setSurveyData(response.data.data);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  if (surveyData.length === 0) return null;\r\n  return (\r\n    <Container>\r\n      <ContentContainer className={classes.root}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <SurveyQuestion>\r\n              Q{surveyData[qNumber].q_num}.{' '}\r\n              {surveyData[qNumber].question.split('<br />')[0].length !== 0 &&\r\n                surveyData[qNumber].question.split('<br />')[0]}\r\n            </SurveyQuestion>\r\n            <SurveyQuestion>\r\n              {surveyData[qNumber].question.split('<br />')[1].length !== 0 &&\r\n                surveyData[qNumber].question.split('<br />')[1]}\r\n            </SurveyQuestion>\r\n\r\n            <ProcessImageContainer>\r\n              <SurveyImage\r\n                src={`${baseUrl}/image/question/${surveyData[qNumber].image_url}`}\r\n                alt={surveyData[qNumber].image_url}\r\n              />\r\n            </ProcessImageContainer>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ProgressBar qNumber={qNumber} />\r\n            <TestRadio\r\n              select1={surveyData[qNumber].select[0]}\r\n              select2={surveyData[qNumber].select[1]}\r\n              select3={surveyData[qNumber].select[2]}\r\n              qNumber={qNumber}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </ContentContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TestSurvey;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// 페이지 레이아웃 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  /* flex-direction: column; */\r\n  text-align: center;\r\n  background-color: white;\r\n  align-items: center; /* 세로에서 가운데에 요소를 배치하겠다 */\r\n  justify-content: center; /*가로에서 가운데에 요소(자식요소)를 배치하겠다*/\r\n\r\n  margin-left: 20vw;\r\n  margin-right: 20vw;\r\n`;\r\nconst ContentContainer = styled.div`\r\n  padding-top: 40vh;\r\n`;\r\nconst LoadingMention = styled.h3``;\r\n\r\nfunction TestRoading() {\r\n  return (\r\n    <Container>\r\n      <ContentContainer>\r\n        <CircularProgress />\r\n        <LoadingMention>분석중 입니다...</LoadingMention>\r\n      </ContentContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TestRoading;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst TopSectorTitle = styled.h1`\r\n  color: black;\r\n  font-size: 5.5vh;\r\n  margin-top: 1vh;\r\n  margin-bottom: 2vh;\r\n\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 3.5vw;\r\n  }\r\n`;\r\nconst TopSectorImageContainer = styled.div`\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\nconst TopSectorImage = styled.img`\r\n  width: 25vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 25vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    width: 25vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    width: 25vw;\r\n  }\r\n`;\r\nconst TopSectorDescription = styled.h3`\r\n  color: black;\r\n  font-size: 4vh;\r\n  margin-top: 3vh;\r\n  margin-bottom: 0;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 3.5vw;\r\n  }\r\n`;\r\nfunction ResultTopSector(props) {\r\n  const userName = useSelector((state) => state.test.name);\r\n\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      <TopSectorTitle>\r\n        {userName}님은 「{props.nickName}」 {props.name}\r\n      </TopSectorTitle>\r\n      <TopSectorImageContainer>\r\n        <TopSectorImage\r\n          src={`${baseUrl}/image/result/${props.image}`}\r\n          alt={props.name}\r\n        />\r\n      </TopSectorImageContainer>\r\n      <TopSectorDescription>- 명대사 -</TopSectorDescription>\r\n      <TopSectorDescription>{props.desc}</TopSectorDescription>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultTopSector;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MiddleSectorTitle = styled.h1`\r\n  color: black;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 3.5vw;\r\n  }\r\n`;\r\nconst MiddleSectorContainer = styled.div`\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\nconst MiddlesectorEmotionContainer = styled.div`\r\n  display: block;\r\n  margin: 0 2vw;\r\n`;\r\nconst MiddleSectorImage = styled.img`\r\n  width: 5vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 5vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    width: 5vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    width: 5vw;\r\n  }\r\n`;\r\nconst MiddleSectorDescription = styled.p`\r\n  color: black;\r\n  font-size: 1vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 1vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 1vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1vw;\r\n  }\r\n`;\r\n\r\n// 변해야 할 것 : 매핑되는 감정이미지, 이미지 설명도 매핑시켜 저장해놔야 할듯\r\nfunction ResultEmotionSector(props) {\r\n  var total =\r\n    props.userCharacterInfo['기쁨'] +\r\n    props.userCharacterInfo['슬픔'] +\r\n    props.userCharacterInfo['분노'];\r\n  var happy = Math.round((props.userCharacterInfo['기쁨'] / total) * 100);\r\n  var sadness = Math.round((props.userCharacterInfo['슬픔'] / total) * 100);\r\n  var angry = Math.round((props.userCharacterInfo['분노'] / total) * 100);\r\n\r\n  return (\r\n    <>\r\n      <MiddleSectorTitle>대표성격 분석결과</MiddleSectorTitle>\r\n      <MiddleSectorContainer>\r\n        <MiddlesectorEmotionContainer>\r\n          <MiddleSectorImage src=\"/images/emotionHappy.png\" alt={'기쁨'} />\r\n          <MiddleSectorDescription>{happy}%</MiddleSectorDescription>\r\n        </MiddlesectorEmotionContainer>\r\n\r\n        <MiddlesectorEmotionContainer>\r\n          <MiddleSectorImage src=\"/images/emotionSad.png\" alt={'슬픔'} />\r\n          <MiddleSectorDescription>{sadness}%</MiddleSectorDescription>\r\n        </MiddlesectorEmotionContainer>\r\n        <MiddlesectorEmotionContainer>\r\n          <MiddleSectorImage src=\"/images/emotionAngry.png\" alt={'화남'} />\r\n          <MiddleSectorDescription>{angry}%</MiddleSectorDescription>\r\n        </MiddlesectorEmotionContainer>\r\n      </MiddleSectorContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultEmotionSector;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst MiddleSectorContainer = styled.div`\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\nconst MiddlesectorEmotionContainer = styled.div`\r\n  display: block;\r\n  margin: 0 2vw;\r\n`;\r\nconst MiddleSectorTitle = styled.h1`\r\n  color: black;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 3.5vw;\r\n  }\r\n`;\r\nconst MiddleMateSectorImage = styled.img`\r\n  width: 20vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 20vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    width: 20vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    width: 20vw;\r\n  }\r\n`;\r\nconst MiddleMateSectorName = styled.p`\r\n  color: black;\r\n`;\r\nfunction ResultMate(props) {\r\n  return (\r\n    <>\r\n      <MiddleSectorContainer>\r\n        <MiddlesectorEmotionContainer>\r\n          <MiddleSectorTitle>찰떡 궁합</MiddleSectorTitle>\r\n          <MiddleMateSectorImage\r\n            src={`${baseUrl}/image/result/${props.pair[0]}`}\r\n            alt={''}\r\n          />\r\n          <MiddleMateSectorName>{''}</MiddleMateSectorName>\r\n        </MiddlesectorEmotionContainer>\r\n        <MiddlesectorEmotionContainer>\r\n          <MiddleSectorTitle>극혐 조합</MiddleSectorTitle>\r\n          <MiddleMateSectorImage\r\n            src={`${baseUrl}/image/result/${props.pair[1]}`}\r\n            alt={''}\r\n          />\r\n          <MiddleMateSectorName>{''}</MiddleMateSectorName>\r\n        </MiddlesectorEmotionContainer>\r\n      </MiddleSectorContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultMate;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { ColumnChart } from '@toast-ui/react-chart';\r\nimport '@toast-ui/chart/dist/toastui-chart.min.css';\r\n\r\nconst BottomSectorContainer = styled.div`\r\n  display: block;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\nconst BottomSectorTitle = styled.h1`\r\n  color: black;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 3.5vw;\r\n  }\r\n`;\r\nconst BottomGraphDiv = styled.div`\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nfunction ResultGraph(props) {\r\n  const userName = useSelector((state) => state.test.name);\r\n\r\n  var total =\r\n    props.userCharacterInfo['기쁨'] +\r\n    props.userCharacterInfo['슬픔'] +\r\n    props.userCharacterInfo['분노'];\r\n  var happy = Math.round((props.userCharacterInfo['기쁨'] / total) * 100);\r\n  var sadness = Math.round((props.userCharacterInfo['슬픔'] / total) * 100);\r\n  var angry = Math.round((props.userCharacterInfo['분노'] / total) * 100);\r\n\r\n  const data = {\r\n    categories: ['기쁨', '슬픔', '분노'],\r\n    series: [\r\n      {\r\n        name: `${userName}님`,\r\n        data: [happy, sadness, angry],\r\n      },\r\n      {\r\n        name: props.characterName,\r\n        data: [\r\n          props.characterEmotion['기쁨'],\r\n          props.characterEmotion['슬픔'],\r\n          props.characterEmotion['분노'],\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    theme: {\r\n      series: {\r\n        colors: ['#EDAE49', '#D1495B'],\r\n      },\r\n    },\r\n    tooltip: {\r\n      transition: 'transform 0.5s ease-in',\r\n    },\r\n    chart: {\r\n      width: 'auto',\r\n      height: 'auto',\r\n      animation: {\r\n        duration: 300,\r\n      },\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: '백분율',\r\n      },\r\n      min: 0,\r\n      max: 10,\r\n    },\r\n    xAxis: {\r\n      title: {\r\n        text: '3대 감정',\r\n      },\r\n      min: 0,\r\n      max: 10,\r\n      suffix: '$',\r\n    },\r\n    series: {\r\n      eventDetectType: 'grouped',\r\n      showLabel: true,\r\n      selectable: true,\r\n      dataLabels: {\r\n        visible: true,\r\n        anchor: 'outer',\r\n      },\r\n    },\r\n    legend: {\r\n      align: 'bottom',\r\n      visible: true,\r\n      showCheckbox: true,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <BottomSectorContainer>\r\n      <BottomSectorTitle>3대 감정 측정결과</BottomSectorTitle>\r\n      <BottomGraphDiv>\r\n        <ColumnChart\r\n          data={data}\r\n          options={options}\r\n          style={{ width: '50vw', height: '40vh', paddingLeft: '2vw' }}\r\n        />\r\n      </BottomGraphDiv>\r\n    </BottomSectorContainer>\r\n  );\r\n}\r\n\r\nexport default ResultGraph;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n// import * as htmlToImage from 'html-to-image';\r\n// import download from 'downloadjs';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  testUserName,\r\n  testSurveyNumber,\r\n  testEmotionCount,\r\n  testWordCount,\r\n} from '../../actions';\r\nconst ButtonContainer = styled.div`\r\n  display: block;\r\n`;\r\n\r\nconst ResultPhargraph = styled.h1`\r\n  color: black;\r\n  font-size: 5vh;\r\n  display: inline-block;\r\n  margin: auto 2vw;\r\n  cursor: pointer;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 2vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1.5vh;\r\n  }\r\n`;\r\nconst HomeButtonLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nconst callKakaoBtn = () => {\r\n  if (window.Kakao.isInitialized() === false) {\r\n    window.Kakao.init('01ce767b8835e65a664c0c446be9ad7b');\r\n    // console.log(window.Kakao.isInitialized());\r\n  }\r\n  window.Kakao.Link.createDefaultButton({\r\n    container: '#kakao-link-btn',\r\n    objectType: 'feed',\r\n    content: {\r\n      title: '하이킥완전정복-HOGUMA',\r\n      description:\r\n        '#거침없이하이킥 #모든것을 파헤쳤다 #이곳만 방문하면 #당신은 하이킥장인',\r\n      imageUrl:\r\n        'https://postfiles.pstatic.net/MjAyMTAyMTdfODgg/MDAxNjEzNTM5OTYxMTQz.DluFhvZjpR2sEa57D9s1vmt6Huuqdbdz4qdb3jkQ2NUg.2PgxfpKsmA0eduh3c6xJXsHidS9XRn5CmCI42QYA7BAg.PNG.eliceacademy/%EB%A7%8C%EC%A0%90%EC%9E%90%EC%82%B0_12x.png?type=w966',\r\n      link: {\r\n        mobileWebUrl: `http://elice-kdt-ai-track-vm-da-02.koreacentral.cloudapp.azure.com/survey/result`,\r\n        webUrl: `http://elice-kdt-ai-track-vm-da-02.koreacentral.cloudapp.azure.com/survey/result`,\r\n        // mobileWebUrl: 'http://localhost:3000/survey/result',\r\n        // webUrl: `http://localhost:3000/survey/result`,\r\n      },\r\n    },\r\n    social: {\r\n      likeCount: 129,\r\n      commentCount: 129,\r\n      sharedCount: 129,\r\n    },\r\n    buttons: [\r\n      {\r\n        title: '검사결과 보기',\r\n        link: {\r\n          mobileWebUrl: `http://elice-kdt-ai-track-vm-da-02.koreacentral.cloudapp.azure.com/survey/result`,\r\n          webUrl: `http://elice-kdt-ai-track-vm-da-02.koreacentral.cloudapp.azure.com/survey/result`,\r\n          // mobileWebUrl: `http://localhost:3000/survey/result`,\r\n          // webUrl: `http://localhost:3000/survey/result`,\r\n        },\r\n      },\r\n      {\r\n        title: '서비스로 이동',\r\n        link: {\r\n          mobileWebUrl:\r\n            'http://elice-kdt-ai-track-vm-da-02.koreacentral.cloudapp.azure.com',\r\n          webUrl:\r\n            'http://elice-kdt-ai-track-vm-da-02.koreacentral.cloudapp.azure.com',\r\n          // mobileWebUrl: 'http://localhost:3000',\r\n          // webUrl: 'http://localhost:3000',\r\n        },\r\n      },\r\n    ],\r\n  });\r\n};\r\nfunction onClickKakao() {\r\n  window.open(\r\n    'http://elice-kdt-ai-track-vm-da-02.koreacentral.cloudapp.azure.com/survey/result',\r\n  );\r\n  // window.open('http://localhost:3000/survey/result');\r\n}\r\n\r\n// function makeImg() {\r\n//   htmlToImage\r\n//     .toPng(document.getElementById('result-img'))\r\n//     .then(function (dataUrl) {\r\n//       download(dataUrl, 'test-result.png');\r\n//     });\r\n// }\r\n\r\nfunction ResultButton() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const url = window.location.href; // 현재 url 복사\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const copyClick = () => {\r\n    enqueueSnackbar('URL이 복사되었습니다.');\r\n  };\r\n  useEffect(() => {\r\n    callKakaoBtn();\r\n  }, []);\r\n  return (\r\n    <ButtonContainer>\r\n      <ResultPhargraph id=\"kakao-link-btn\" onClick={onClickKakao}>\r\n        공유하자\r\n      </ResultPhargraph>\r\n      <React.Fragment>\r\n        <CopyToClipboard text={url}>\r\n          <ResultPhargraph onClick={copyClick}>복사하자</ResultPhargraph>\r\n        </CopyToClipboard>\r\n      </React.Fragment>\r\n\r\n      <ResultPhargraph\r\n        onClick={() => {\r\n          history.push('/');\r\n          dispatch(testUserName(''));\r\n          dispatch(testSurveyNumber(0));\r\n          dispatch(testEmotionCount({ 기쁨: 0, 슬픔: 0, 분노: 0 }));\r\n          dispatch(testWordCount(0));\r\n        }}\r\n      >\r\n        <HomeButtonLink to=\"/\"> 홈 이동</HomeButtonLink>\r\n      </ResultPhargraph>\r\n    </ButtonContainer>\r\n  );\r\n}\r\n\r\nexport default ResultButton;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ResultTopSector from '../../components/Test/ResultTopSector';\r\nimport ResultEmotionSector from '../../components/Test/ResultEmotionSector';\r\nimport ResultMate from '../../components/Test/ResultMate';\r\nimport ResultGraph from '../../components/Test/ResultGraph';\r\nimport ResultButtons from '../../components/Test/ResultButton';\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    border: '4px solid black',\r\n  },\r\n}));\r\n\r\n// 페이지 레이아웃 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  background-color: white;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 20vw;\r\n`;\r\n\r\nfunction TestResult() {\r\n  const classes = useStyles();\r\n  const [characterInfo, setCharacterInfo] = useState({});\r\n  const userCharacterInfo = useSelector((state) => state.test.emotionCount);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios\r\n        .get(baseUrl + 'test/result', {\r\n          params: {\r\n            joy: userCharacterInfo['기쁨'],\r\n            sadness: userCharacterInfo['슬픔'],\r\n            anger: userCharacterInfo['분노'],\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setCharacterInfo(response.data.data);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [userCharacterInfo]);\r\n\r\n  if (Object.keys(characterInfo).length === 0) return null;\r\n  return (\r\n    <Container id=\"result-img\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <ResultTopSector\r\n              name={characterInfo.name}\r\n              nickName={characterInfo.nick_name}\r\n              image={characterInfo.image}\r\n              desc={characterInfo.description}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <ResultEmotionSector userCharacterInfo={userCharacterInfo} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <ResultMate pair={characterInfo.pair} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <ResultGraph\r\n              userCharacterInfo={userCharacterInfo}\r\n              characterName={characterInfo.name}\r\n              characterEmotion={characterInfo.emotion}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <ResultButtons />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TestResult;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { testUserName } from '../../actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport styled from 'styled-components';\r\n\r\n// 제목 컴포넌트\r\nconst TestTitle = styled.h1`\r\n  font-size: 3vw;\r\n  margin-top: 0;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n// 제목 설명 컴포넌트\r\nconst TestParagraph = styled.p`\r\n  font-size: 1.5vw;\r\n`;\r\n// 사용자 정보 & 버튼 컨테이너\r\nconst FormContainer = styled.div`\r\n  padding-top: 5vh;\r\n  padding-bottom: 5vh;\r\n`;\r\n// 콘텐츠 컨테이너\r\nconst ContentContainer = styled.div`\r\n  align-items: center;\r\n  padding-top: 20vh;\r\n`;\r\n// 페이지 레이아웃 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  background-color: white;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  margin-left: 20vw;\r\n  margin-right: 20vw;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction TestOverdoseMain(props) {\r\n  const userName = useSelector((state) => state.test.name);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(testUserName(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ContentContainer>\r\n        <TestTitle>2021년도 제 1회 하이킥 고사</TestTitle>\r\n\r\n        <TestParagraph>하이킥 중독성 영역</TestParagraph>\r\n\r\n        <FormContainer>\r\n          <form\r\n            onSubmit={() => console.log('테스트 시작.')}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n          >\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"이름을 입력해주세요.\"\r\n              name=\"name\"\r\n              value={userName}\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n        </FormContainer>\r\n        <Button\r\n          className={classes.button}\r\n          disabled={!userName}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            history.push('/overdose/process');\r\n          }}\r\n        >\r\n          응시하기\r\n        </Button>\r\n      </ContentContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TestOverdoseMain;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  testEmotionCount,\r\n  testCheckedWord,\r\n  testWordCount,\r\n} from '../../actions';\r\nimport styled from 'styled-components';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst WordDiv = styled.div`\r\n  align-items: center;\r\n  border: 5px solid black;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst WordButton = styled.button`\r\n  width: 100%;\r\n  font-size: 1vw;\r\n  background-color: #858585;\r\n  background-size: auto;\r\n  &:active {\r\n    background-color: yellow;\r\n  }\r\n`;\r\nconst WordButtonText = styled.p`\r\n  font-size: 1.2vw;\r\n  font-weight: bold;\r\n  color: white;\r\n  margin: 0;\r\n`;\r\nfunction WordItems(props) {\r\n  const emotionCount = useSelector((state) => state.test.emotionCount);\r\n  const wordCount = useSelector((state) => state.test.wordCount);\r\n  const checkedWords = useSelector((state) => state.test.checkedWord);\r\n  const dispatch = useDispatch();\r\n\r\n  function FormRow(props) {\r\n    // const checkedWord = useSelector((state) => state.test.checkedWord);\r\n\r\n    // const handleCheckedWord = (name) => {\r\n    //   if (checkedWord) {\r\n    //     for (var i = 0; i < checkedWord.length(); i++) {\r\n    //       if (checkedWord[i].label === name) {\r\n    //         return false;\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   return true;\r\n    // };\r\n\r\n    const isCheckedWord = (checkedWords, wordID) => {\r\n      var flag = true;\r\n      for (var i = 0; i < checkedWords.length; i++) {\r\n        if (checkedWords[i][0] === wordID) {\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n      return flag;\r\n    };\r\n\r\n    const wordList = props.words.map((word, index) => (\r\n      <Grid key={index} item xs={3}>\r\n        <WordDiv\r\n          key={index}\r\n          style={{\r\n            display: isCheckedWord(checkedWords, word[0]) ? true : 'none',\r\n          }}\r\n        >\r\n          <WordButton\r\n            disabled={wordCount === 8 ? true : false}\r\n            key={index}\r\n            id={word[0]}\r\n            value={word[1]}\r\n            name={word[2]}\r\n            onClick={(event) => {\r\n              // checkedWords.push([word[0], word[1], word[2]]);\r\n              var newCheckedWords = [];\r\n              for (var i = 0; i < checkedWords.length; i++) {\r\n                newCheckedWords.push(checkedWords[i]);\r\n              }\r\n              newCheckedWords.push([word[0], word[1], word[2]]);\r\n\r\n              dispatch(testCheckedWord(newCheckedWords));\r\n\r\n              // console.log(word[0], word[1], word[2]);\r\n              emotionCount[event.target.value] += 1;\r\n              dispatch(testEmotionCount(emotionCount));\r\n              dispatch(testWordCount(wordCount + 1));\r\n              // console.log(emotionCount);\r\n            }}\r\n          >\r\n            <WordButtonText>{word[2]}</WordButtonText>\r\n          </WordButton>\r\n        </WordDiv>\r\n      </Grid>\r\n    ));\r\n    return <React.Fragment>{wordList}</React.Fragment>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow words={props.words} qNumber={props.qNumber} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WordItems;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { testWordCount, testCheckedWord } from '../../actions';\r\nimport styled from 'styled-components';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordItems from '../../components/Test/WordItems';\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    border: '4px solid black',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\n// 페이지 레이아웃 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  /* flex-direction: column; */\r\n  text-align: center;\r\n  background-color: white;\r\n  align-items: center; /* 세로에서 가운데에 요소를 배치하겠다 */\r\n  justify-content: center; /*가로에서 가운데에 요소(자식요소)를 배치하겠다*/\r\n\r\n  margin-left: 20vw;\r\n  margin-right: 20vw;\r\n  padding-top: 5vh;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    padding-top: 10vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    padding-top: 10vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n  }\r\n`;\r\nconst WordTestTitle = styled.h1`\r\n  color: black;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 2.2vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 2.2vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 2vw;\r\n  }\r\n`;\r\nconst WordSubmit = styled.h1`\r\n  color: black;\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 2.2vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 2.2vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 2vw;\r\n  }\r\n`;\r\nconst CheckedChips = styled.li`\r\n  display: inline-block;\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction TestWord() {\r\n  const classes = useStyles();\r\n  const wordCounter = useSelector((state) => state.test.wordCount);\r\n  const qNumber = useSelector((state) => state.test.surveyNumber);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [words, setWords] = useState([]);\r\n  const chipData = useSelector((state) => state.test.checkedWord);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios.get(baseUrl + 'test/word').then((response) => {\r\n        console.log(response.data.data);\r\n        setWords(response.data.data);\r\n      });\r\n      // axios.get('http://localhost:3000/data/testWord.json').then((response) => {\r\n      //   console.log(response.data.data);\r\n      //   setWords(response.data.data);\r\n      // });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  const handleDelete = (deleteChipKey) => () => {\r\n    dispatch(testWordCount(wordCounter - 1));\r\n    var newChipData = [];\r\n    for (var i = 0; i < chipData.length; i++) {\r\n      if (chipData[i][0].toString() !== deleteChipKey) {\r\n        newChipData.push(chipData[i]);\r\n      }\r\n    }\r\n    dispatch(testCheckedWord(newChipData));\r\n  };\r\n\r\n  if (words.length !== 24) return null;\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <WordTestTitle>\r\n              평소 사용하는 단어와 비슷한 단어 8개를 골라주세요.\r\n            </WordTestTitle>\r\n          </Paper>\r\n        </Grid>\r\n        {Array.isArray(chipData) && chipData.length !== 0 && (\r\n          <Grid item xs={12}>\r\n            <Paper component=\"ul\" className={classes.paper}>\r\n              {chipData.map((data) => {\r\n                return (\r\n                  <CheckedChips key={data[0].toString()}>\r\n                    <Chip\r\n                      label={data[2]}\r\n                      onDelete={handleDelete(data[0].toString())}\r\n                      className={classes.chip}\r\n                      color=\"primary\"\r\n                    />\r\n                  </CheckedChips>\r\n                );\r\n              })}\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <WordItems words={words} qNumber={qNumber} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper\r\n            elevation={1}\r\n            className={classes.paper}\r\n            style={{ display: wordCounter < 8 && 'none' }}\r\n          >\r\n            <WordSubmit\r\n              style={{ display: wordCounter < 8 && 'none' }}\r\n              onClick={() => {\r\n                history.push('/roading');\r\n                setTimeout(function () {\r\n                  history.push('/survey/result');\r\n                }, 3000);\r\n              }}\r\n            >\r\n              제출하기\r\n            </WordSubmit>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TestWord;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst QuestionDiv = styled.div`\r\n  margin: 1vh 2vw;\r\n  text-align: left;\r\n`;\r\nconst SelectDiv = styled.div`\r\n  display: block;\r\n`;\r\nconst Question = styled.h3`\r\n  font-size: 2.2vh;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 1.6vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 1.4vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1.2vh;\r\n  }\r\n`;\r\nconst QuestionLabel = styled.label`\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 1.6vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 1.4vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1.2vh;\r\n  }\r\n`;\r\n\r\nfunction OverdoseTestQuestion(props) {\r\n  return (\r\n    <QuestionDiv>\r\n      <Question>\r\n        {props.id}. {props.question}\r\n      </Question>\r\n      <SelectDiv>\r\n        <input\r\n          id={`q${props.id}-select1`}\r\n          className=\"select-radio\"\r\n          type=\"radio\"\r\n          value={props.select1[1].toString()}\r\n          name={`${props.id}`}\r\n          onClick={() => props.checkedCounter()}\r\n        />\r\n        <QuestionLabel htmlFor={`q${props.id}-select1`}>\r\n          {props.select1[0]}\r\n        </QuestionLabel>\r\n      </SelectDiv>\r\n      <SelectDiv>\r\n        <input\r\n          id={`q${props.id}-select2`}\r\n          className=\"select-radio\"\r\n          type=\"radio\"\r\n          value={props.select2[1].toString()}\r\n          name={`${props.id}`}\r\n          onClick={() => props.checkedCounter()}\r\n        />\r\n        <QuestionLabel htmlFor={`q${props.id}-select2`}>\r\n          {props.select2[0]}\r\n        </QuestionLabel>\r\n      </SelectDiv>\r\n      <SelectDiv>\r\n        <input\r\n          id={`q${props.id + 1}-select3`}\r\n          className=\"select-radio\"\r\n          type=\"radio\"\r\n          value={props.select3[1].toString()}\r\n          name={`${props.id}`}\r\n          onClick={() => props.checkedCounter()}\r\n        />\r\n        <QuestionLabel htmlFor={`q${props.id}-select3`}>\r\n          {props.select3[0]}\r\n        </QuestionLabel>\r\n      </SelectDiv>\r\n      <SelectDiv>\r\n        <input\r\n          id={`q${props.id}-select4`}\r\n          className=\"select-radio\"\r\n          type=\"radio\"\r\n          value={props.select4[1].toString()}\r\n          name={`${props.id}`}\r\n          onClick={() => props.checkedCounter()}\r\n        />\r\n        <QuestionLabel htmlFor={`q${props.id}-select4`}>\r\n          {props.select4[0]}\r\n        </QuestionLabel>\r\n      </SelectDiv>\r\n    </QuestionDiv>\r\n  );\r\n}\r\n\r\nexport default OverdoseTestQuestion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { testOverdoseCount } from '../../actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button, useMediaQuery } from '@material-ui/core';\r\nimport OverdoseTestQuestion from '../../components/Test/OverdoseTestQuestion';\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    background: 'none',\r\n  },\r\n  grid: {\r\n    borderRight: '2px solid black',\r\n  },\r\n  gridMobile: {\r\n    border: 'none',\r\n  },\r\n}));\r\n\r\n// 페이지 레이아웃 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  /* flex-direction: column; */\r\n  text-align: center;\r\n  background-color: white;\r\n  align-items: center; /* 세로에서 가운데에 요소를 배치하겠다 */\r\n  justify-content: center; /*가로에서 가운데에 요소(자식요소)를 배치하겠다*/\r\n\r\n  margin-left: 20vw;\r\n  margin-right: 20vw;\r\n`;\r\nconst PageTitle = styled.h1`\r\n  color: black;\r\n  margin-top: 0;\r\n  font-size: 3.7vh;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3.2vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 2.7vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 2.2vh;\r\n  }\r\n`;\r\nconst PageSubTitle = styled.h2`\r\n  color: black;\r\n  margin-bottom: 0;\r\n  font-size: 2.9vh;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 2.4vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 1.9vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1.4vh;\r\n  }\r\n`;\r\n\r\nfunction TestOverdose() {\r\n  const classes = useStyles();\r\n  const isMobile = useMediaQuery('(min-width: 480px)');\r\n  const [overdoseQuestion, setOverdoseQuestion] = useState([]);\r\n  // 제출버튼 활성화용 일뿐, 다른페이지에서는 이 state를 사용하지 않기에, 굳이 redux로 관리하지 않아도 되나 ?\r\n  const [isChecked, setIsChecked] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  function AnswerCounter() {\r\n    let AnswerCount = 0;\r\n\r\n    for (var i = 1; i <= 10; i++)\r\n      if (document.querySelector(`input[name='${i}']:checked`).value === 'true')\r\n        AnswerCount += 1;\r\n\r\n    dispatch(testOverdoseCount(AnswerCount));\r\n  }\r\n  function CheckedCounter() {\r\n    let checkedCount = 0;\r\n    for (var i = 0; i < document.querySelectorAll('.select-radio').length; i++)\r\n      if (document.querySelectorAll('.select-radio')[i].checked)\r\n        checkedCount += 1;\r\n\r\n    // 일단은, useState로 관리하는데, redux를 사용하기 시작했으므로, 사소한 것도, 모두 redux에서 관리해야 한다면, dispatch 할 것\r\n    setIsChecked(checkedCount);\r\n  }\r\n  useEffect(() => {\r\n    try {\r\n      axios.get(baseUrl + 'overdose').then((response) => {\r\n        setOverdoseQuestion(response.data.test);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  if (!overdoseQuestion.length) return null;\r\n  return (\r\n    <Container\r\n      style={{\r\n        backgroundImage: `url(${'/images/examimg1.jpg'})`,\r\n        backgroundSize: 'cover',\r\n      }}\r\n    >\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={0}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ margin: '0 2vw', borderBottom: '3px solid black' }}\r\n        >\r\n          <PageSubTitle>2021년도 제 1회 하이킥 고사</PageSubTitle>\r\n          <PageTitle>하이킥 중독성 영역</PageTitle>\r\n        </Grid>\r\n        <Grid style={{ margin: '1vh 0' }} container item xs={12} spacing={0}>\r\n          <Grid\r\n            item\r\n            xs={isMobile ? 6 : 12}\r\n            className={isMobile ? classes.grid : classes.gridMobile}\r\n          >\r\n            <Paper elevation={0} className={classes.paper}>\r\n              {overdoseQuestion.slice(0, 5).map((question, index) => {\r\n                return (\r\n                  <OverdoseTestQuestion\r\n                    key={index}\r\n                    id={question.qnum}\r\n                    question={question.question}\r\n                    select1={question.select[0]}\r\n                    select2={question.select[1]}\r\n                    select3={question.select[2]}\r\n                    select4={question.select[3]}\r\n                    checkedCounter={CheckedCounter}\r\n                  />\r\n                );\r\n              })}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={isMobile ? 6 : 12}>\r\n            <Paper elevation={0} className={classes.paper}>\r\n              {overdoseQuestion.slice(5, 10).map((question, index) => {\r\n                return (\r\n                  <OverdoseTestQuestion\r\n                    key={index}\r\n                    id={question.qnum}\r\n                    question={question.question}\r\n                    select1={question.select[0]}\r\n                    select2={question.select[1]}\r\n                    select3={question.select[2]}\r\n                    select4={question.select[3]}\r\n                    checkedCounter={CheckedCounter}\r\n                  />\r\n                );\r\n              })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ margin: '0 2vw', borderTop: '3px solid black' }}\r\n        >\r\n          <Paper elevation={0} className={classes.paper}>\r\n            <Button\r\n              disabled={isChecked === 10 ? false : true}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                AnswerCounter();\r\n                history.push('/roading');\r\n                setTimeout(function () {\r\n                  history.push('/overdose/result');\r\n                }, 3000);\r\n              }}\r\n            >\r\n              제출하기\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TestOverdose;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst ImgContainer = styled.div`\r\n  overflow: hidden;\r\n  display: block;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\n\r\nconst ScoreDiv = styled.div`\r\n  padding-top: 1vh;\r\n`;\r\nconst ScoreImg = styled.img`\r\n  width: 35vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 35vw;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    width: 35vw;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    width: 35vw;\r\n  }\r\n`;\r\nconst Score = styled.h1`\r\n  color: black;\r\n  display: inline-block;\r\n  margin: 0 1vw;\r\n  font-size: 7vh;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 6vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 5vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 4vh;\r\n  }\r\n`;\r\nconst ScoreText = styled.h1`\r\n  color: black;\r\n  display: inline-block;\r\n  font-size: 4vh;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3.5vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 2.5vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1.5vh;\r\n  }\r\n`;\r\nconst ContentsDescription = styled.p`\r\n  color: black;\r\n  font-size: 3vh;\r\n  margin-top: 0;\r\n  font-family: 'yangjin';\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 2vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1.3vh;\r\n  }\r\n`;\r\n\r\nfunction OverdoseContents(props) {\r\n  return (\r\n    <ImgContainer>\r\n      <ScoreDiv>\r\n        <ScoreText>점수</ScoreText>\r\n        <Score>{props.answerCount * 10}</Score>\r\n        <ScoreText>점</ScoreText>\r\n      </ScoreDiv>\r\n\r\n      <ScoreImg\r\n        src={`${baseUrl}/image/overdose/${props.data[0].image}`}\r\n        alt={props.data[0].image}\r\n      />\r\n      <ContentsDescription>\r\n        성적표야? 어디보자~\r\n        <br />\r\n        {props.data[0].description[0].split('<br />')[0]}\r\n        <br />\r\n        {props.data[0].description[0].split('<br />')[1]}\r\n        <br />\r\n      </ContentsDescription>\r\n    </ImgContainer>\r\n  );\r\n}\r\n\r\nexport default OverdoseContents;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { testUserName } from '../../actions';\r\nimport styled from 'styled-components';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from 'react-router-dom';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { useSnackbar } from 'notistack';\r\nimport OverdoseContents from '../../components/Test/OverdoseContents';\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    border: '4px solid black',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// 페이지 레이아웃 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  /* flex-direction: column; */\r\n  text-align: center;\r\n  background-color: white;\r\n  align-items: center; /* 세로에서 가운데에 요소를 배치하겠다 */\r\n  justify-content: center; /*가로에서 가운데에 요소(자식요소)를 배치하겠다*/\r\n\r\n  margin-left: 20vw;\r\n  margin-right: 20vw;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    padding-top: 10vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    padding-top: 15vh;\r\n  }\r\n`;\r\nconst ResultTitle = styled.h1`\r\n  color: black;\r\n  font-size: 5vh;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 4vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 3vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 2vh;\r\n  }\r\n`;\r\nconst ResultPhargraph = styled.h1`\r\n  color: black;\r\n  font-size: 5vh;\r\n  display: inline-block;\r\n  margin: 0 2vw;\r\n  cursor: pointer;\r\n  font-family: 'yangjin';\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    font-size: 3.5vh;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 767px) {\r\n    font-size: 2vh;\r\n  }\r\n  @media (min-width: 320px) and (max-width: 480px) {\r\n    font-size: 1.3vh;\r\n  }\r\n`;\r\nconst MyLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction TestOverdoseResult() {\r\n  const classes = useStyles();\r\n  const [overdoseData, setOverdoseData] = useState([]);\r\n  const userName = useSelector((state) => state.test.name);\r\n  const overdoseCount = useSelector((state) => state.test.overdoseCount);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const url = window.location.href;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios.get(baseUrl + `overdose/${overdoseCount}`).then((response) => {\r\n        setOverdoseData([response.data.data]);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [overdoseCount]);\r\n  const copyClick = () => {\r\n    enqueueSnackbar('URL이 복사되었습니다.');\r\n  };\r\n\r\n  if (!overdoseData.length) return null;\r\n  return (\r\n    <Container>\r\n      <div className={classes.root}>\r\n        {overdoseData.length && (\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <ResultTitle>{userName}님의 시험결과</ResultTitle>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <OverdoseContents\r\n                  name={userName}\r\n                  answerCount={overdoseCount}\r\n                  data={overdoseData}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper} style={{ paddingTop: '2.2vh' }}>\r\n                <ResultPhargraph\r\n                  onClick={() => {\r\n                    history.push('/overdose/process');\r\n                  }}\r\n                >\r\n                  재도전 하기\r\n                </ResultPhargraph>\r\n                <CopyToClipboard text={url}>\r\n                  <ResultPhargraph onClick={copyClick}>\r\n                    복사하기\r\n                  </ResultPhargraph>\r\n                </CopyToClipboard>\r\n                <MyLink to=\"/\">\r\n                  <ResultPhargraph\r\n                    onClick={() => {\r\n                      history.push('/');\r\n                      dispatch(testUserName(''));\r\n                    }}\r\n                  >\r\n                    홈으로 이동\r\n                  </ResultPhargraph>\r\n                </MyLink>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TestOverdoseResult;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { gameRandom } from '../../actions';\r\nimport styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\n\r\nexport default function GameMain() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    try {\r\n      axios.get(baseUrl + 'game').then((response) => {\r\n        console.log(response.data.data[0]);\r\n        dispatch(gameRandom(response.data.data[0]));\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const Container = styled.div`\r\n    display: flex;\r\n    width: 90vw;\r\n    height: 90vh;\r\n    margin: auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    background-image: url(/images/lottobg.jpg);\r\n    object-fit: cover;\r\n    padding: 0 10px;\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      <h1 style={{ color: '#fff' }}>추억의 뽑기게임</h1>\r\n      <h4 style={{ color: '#fff', marginTop: '0' }}>\r\n        당신의 하이킥 추억을 뽑아보세요!\r\n      </h4>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          history.push('/game/result');\r\n          handleClick();\r\n        }}\r\n      >\r\n        번호 뽑기\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { gameOpen } from '../../actions';\r\nimport './ball.css';\r\n\r\nconst Ball = () => {\r\n  const dispatch = useDispatch();\r\n  const number = useSelector((state) => state.game.random.number);\r\n\r\n  return (\r\n    <div class=\"stage\">\r\n      <figure\r\n        class=\"ball\"\r\n        onClick={() => {\r\n          console.log('공을 클릭했다!');\r\n          dispatch(gameOpen());\r\n        }}\r\n      >\r\n        <span class=\"number\" data-number={number}>\r\n          &nbsp;&nbsp;&nbsp;\r\n        </span>\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ball;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { gameClose } from '../../actions';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { MdClose } from 'react-icons/md';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <MdClose />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport default function GameDialog() {\r\n  const dispatch = useDispatch();\r\n  const open = useSelector((state) => state.game.open);\r\n  const random = useSelector((state) => state.game.random);\r\n\r\n  const handleClose = () => {\r\n    dispatch(gameClose());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          하이킥 추억 돌아보기\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{ textAlign: 'center' }}>\r\n          <img\r\n            alt={`gacha_${random.id}`}\r\n            src={`/images/game/gacha_${random.id}.png`}\r\n            style={{ width: '80%' }}\r\n          />\r\n          <h2>{random.quote}</h2>\r\n          <h3>당신의 추억은 \"{random.nickname}\"입니다</h3>\r\n          <Typography gutterBottom>\r\n            {random.question.map((line) => {\r\n              return <p>{line}</p>;\r\n            })}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <h3>{random.description}</h3>\r\n          </Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { gameClick } from '../../actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Ball from '../../components/Ball';\r\nimport GameDialog from '../../components/Dialog/GameDialog';\r\n\r\nexport default function GameResult() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh',\r\n      }}\r\n    >\r\n      <Ball />\r\n      <>\r\n        <h3>무슨 숫자일까요?</h3>\r\n        <span>공을 클릭해 확인해보세요!</span>\r\n      </>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => history.push('/game')}\r\n          style={{ margin: '1rem 0.5rem 0 0.5rem' }}\r\n        >\r\n          다시 뽑기\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            dispatch(gameClick(false));\r\n            history.push('/game/all');\r\n          }}\r\n          style={{ margin: '1rem 0.5rem 0 0.5rem' }}\r\n        >\r\n          전체 보기\r\n        </Button>\r\n\r\n        <GameDialog />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { gameSelected, gameClick, gameShow } from '../../actions';\r\nimport Slider from 'react-slick';\r\nimport './carousel.css';\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst Photo = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  function selectedDataHandler(gacha_id) {\r\n    try {\r\n      axios.get(baseUrl + 'game/' + gacha_id).then((response) => {\r\n        console.log(response.data.data[0]);\r\n        dispatch(gameSelected(response.data.data[0]));\r\n        dispatch(gameClick(true));\r\n        dispatch(gameShow(false));\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        alt={`gacha_${id}`}\r\n        src={`/images/game/gacha_${id}.png`}\r\n        style={{ width: '100%', height: '100%', objectFit: 'cover' }}\r\n        onClick={() => {\r\n          console.log(id);\r\n          selectedDataHandler(id);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Carousel({ onClick }) {\r\n  const settings = {\r\n    dots: false,\r\n    arrows: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 2000,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 1,\r\n          infinite: true,\r\n          dots: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ padding: '50px', background: '#fff', dispaly: 'flex' }}\r\n    >\r\n      <Slider {...settings}>\r\n        {[...Array(20).keys()].map((i) => {\r\n          return <Photo id={i + 1} onClick={onClick} />;\r\n        })}\r\n      </Slider>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { gameShow } from '../../actions';\r\nimport Carousel from '../../components/Carousel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function GameAll() {\r\n  const dispatch = useDispatch();\r\n  const selected = useSelector((state) => state.game.selected);\r\n  const click = useSelector((state) => state.game.click);\r\n  const show = useSelector((state) => state.game.show);\r\n\r\n  return (\r\n    <div style={{ width: '80vw', margin: 'auto', textAlign: 'center' }}>\r\n      <Carousel />\r\n\r\n      {!click && (\r\n        <div\r\n          style={{\r\n            width: '80%',\r\n            height: '25vh',\r\n            margin: 'auto',\r\n            padding: 'auto',\r\n            border: 'solid 0.2rem black',\r\n            borderRadius: '1rem',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <h2>사진을 클릭해 하이킥 추억을 꺼내보세요!</h2>\r\n          <h4>\r\n            거침없이 하이킥의 명장면을 살펴보고 <br />\r\n            데이터 분석으로 도출된 하이킥의 재밌는 사실들을 알아보세요\r\n          </h4>\r\n        </div>\r\n      )}\r\n\r\n      {click && (\r\n        <div\r\n          style={{\r\n            width: '80%',\r\n            height: '25vh',\r\n            margin: 'auto',\r\n            padding: 'auto',\r\n            border: 'solid 0.2rem black',\r\n            borderRadius: '1rem',\r\n          }}\r\n        >\r\n          {!show && (\r\n            <>\r\n              <h2>{selected.quote}</h2>\r\n              {selected.question.map((line) => {\r\n                return <p>{line}</p>;\r\n              })}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  dispatch(gameShow(true));\r\n                }}\r\n              >\r\n                정답 보기\r\n              </Button>\r\n            </>\r\n          )}\r\n\r\n          {show && (\r\n            <>\r\n              <h1>{selected.number}번</h1>\r\n              <p>{selected.description}</p>\r\n              <h3>다른 사진도 클릭해보세요!</h3>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { characterOpen, characterSelected } from '../../actions';\r\nimport Cytoscape from 'cytoscape';\r\nimport CytoscapeComponent from 'react-cytoscapejs';\r\nimport coseBilkent from 'cytoscape-cose-bilkent';\r\n\r\nconst data = [\r\n  // node\r\n  { data: { id: '1', label: '나문희' } },\r\n  { data: { id: '2', label: '이순재' } },\r\n  { data: { id: '3', label: '박해미' } },\r\n  { data: { id: '4', label: '이준하' } },\r\n  { data: { id: '5', label: '이민호' } },\r\n  { data: { id: '6', label: '이윤호' } },\r\n  { data: { id: '7', label: '이민용' } },\r\n  { data: { id: '8', label: '신지' } },\r\n  { data: { id: '9', label: '서민정' } },\r\n  { data: { id: '10', label: '강유미' } },\r\n  { data: { id: '11', label: '김범' } },\r\n  { data: { id: '12', label: '홍순창' } },\r\n  { data: { id: '13', label: '개성댁' } },\r\n  { data: { id: '14', label: '황찬성' } },\r\n\r\n  // edge\r\n  { data: { id: '102', target: '1', source: '2', type: 'family' } },\r\n  { data: { id: '304', target: '3', source: '4', type: 'family' } },\r\n  { data: { id: '204', target: '2', source: '4', type: 'family' } },\r\n  { data: { id: '104', target: '1', source: '4', type: 'family' } },\r\n  { data: { id: '305', target: '3', source: '5', type: 'family' } },\r\n  { data: { id: '306', target: '3', source: '6', type: 'family' } },\r\n  { data: { id: '405', target: '4', source: '5', type: 'family' } },\r\n  { data: { id: '406', target: '4', source: '6', type: 'family' } },\r\n  { data: { id: '107', target: '1', source: '7', type: 'family' } },\r\n  { data: { id: '207', target: '2', source: '7', type: 'family' } },\r\n  { data: { id: '609', target: '6', source: '9', type: 'school' } },\r\n  { data: { id: '709', target: '7', source: '9', type: 'school' } },\r\n  { data: { id: '7012', target: '7', source: '12', type: 'school' } },\r\n  { data: { id: '5010', target: '5', source: '10', type: 'school' } },\r\n  { data: { id: '5011', target: '5', source: '11', type: 'school' } },\r\n  { data: { id: '9012', target: '9', source: '12', type: 'school' } },\r\n  { data: { id: '1013', target: '1', source: '13', type: 'friend' } },\r\n  { data: { id: '809', target: '8', source: '9', type: 'friend' } },\r\n  { data: { id: '6014', target: '6', source: '14', type: 'school' } },\r\n];\r\n\r\nCytoscape.use(coseBilkent);\r\n\r\nexport default function MapOrigin() {\r\n  const dispatch = useDispatch();\r\n\r\n  const familyColor = '#f6b93b';\r\n  const schoolColor = '#82ccdd';\r\n  const friendColor = '#badc58';\r\n\r\n  const style = [\r\n    {\r\n      selector: 'node',\r\n      style: {\r\n        'background-color': '#666',\r\n        label: 'data(label)',\r\n        width: 50,\r\n        height: 50,\r\n        'font-size': 10,\r\n      },\r\n    },\r\n\r\n    {\r\n      selector: 'edge',\r\n      style: {\r\n        width: '1.5px',\r\n        'curve-style': 'bezier',\r\n        'line-color': '#ced6e0',\r\n        'target-arrow-color': '#ced6e0',\r\n        'target-arrow-shape': 'vee',\r\n        'source-arrow-color': '#ced6e0',\r\n        'source-arrow-shape': 'vee',\r\n        'arrow-scale': 1,\r\n      },\r\n    },\r\n    {\r\n      selector: 'node:selected',\r\n      style: {\r\n        'border-width': '6px',\r\n        'border-color': '#AAD8FF',\r\n        'border-opacity': '0.5',\r\n        'background-color': '#77828C',\r\n        width: 50,\r\n        height: 50,\r\n      },\r\n    },\r\n    {\r\n      selector: \"edge[type='family']\",\r\n      style: {\r\n        'line-color': familyColor,\r\n        'target-arrow-color': familyColor,\r\n        'source-arrow-color': familyColor,\r\n      },\r\n    },\r\n    {\r\n      selector: \"edge[type='school']\",\r\n      style: {\r\n        'line-color': schoolColor,\r\n        'target-arrow-color': schoolColor,\r\n        'source-arrow-color': schoolColor,\r\n      },\r\n    },\r\n    {\r\n      selector: \"edge[type='friend']\",\r\n      style: {\r\n        'line-color': friendColor,\r\n        'target-arrow-color': friendColor,\r\n        'source-arrow-color': friendColor,\r\n      },\r\n    },\r\n  ];\r\n\r\n  for (let i = 1; i < 15; i++) {\r\n    style.push({\r\n      selector: `#${i}`,\r\n      style: {\r\n        'background-image': `images/map/${i}.jpg`,\r\n        'background-fit': 'cover',\r\n      },\r\n    });\r\n  }\r\n\r\n  const layout = {\r\n    name: 'cose-bilkent',\r\n    animate: false,\r\n    gravityRangeCompound: 1.5,\r\n    fit: true,\r\n    tile: true,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CytoscapeComponent\r\n        elements={data}\r\n        style={{ width: '100%', height: '100%' }}\r\n        stylesheet={style}\r\n        layout={layout}\r\n        zoomingEnabled={true}\r\n        boxSelectionEnabled={true}\r\n        maxZoom={5}\r\n        minZoom={1}\r\n        cy={(cy) => {\r\n          console.log('EVT', cy);\r\n\r\n          cy.on('tap', 'node', (evt) => {\r\n            const node = evt.target;\r\n\r\n            dispatch(characterSelected(node.data().id));\r\n            dispatch(characterOpen());\r\n          });\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { characterOpen, characterSelected } from '../../actions';\r\nimport Cytoscape from 'cytoscape';\r\nimport CytoscapeComponent from 'react-cytoscapejs';\r\nimport coseBilkent from 'cytoscape-cose-bilkent';\r\n\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\n\r\nCytoscape.use(coseBilkent);\r\n\r\nexport default function MapDA() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [element, setElement] = useState();\r\n  const [shape, setShape] = useState('grid');\r\n\r\n  const data = [\r\n    { data: { id: '1', label: '나문희' } },\r\n    { data: { id: '2', label: '이순재' } },\r\n    { data: { id: '3', label: '박해미' } },\r\n    { data: { id: '4', label: '이준하' } },\r\n    { data: { id: '5', label: '이민호' } },\r\n    { data: { id: '6', label: '이윤호' } },\r\n    { data: { id: '7', label: '이민용' } },\r\n    { data: { id: '8', label: '신지' } },\r\n    { data: { id: '9', label: '서민정' } },\r\n    { data: { id: '10', label: '강유미' } },\r\n    { data: { id: '11', label: '김범' } },\r\n    { data: { id: '12', label: '홍순창' } },\r\n    { data: { id: '13', label: '개성댁' } },\r\n    { data: { id: '14', label: '황찬성' } },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios.get(baseUrl + 'connection').then((response) => {\r\n        console.log(response.data.data.edge_DA);\r\n        response.data.data.edge_DA.forEach((x) => {\r\n          data.push({\r\n            data: {\r\n              id: String(x.target) + '0' + String(x.source),\r\n              target: String(x.target),\r\n              source: String(x.source),\r\n              number: String(x.connection_weight),\r\n              type: String(x.weight_tag),\r\n            },\r\n          });\r\n        });\r\n        setElement(data);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShape('circle');\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const style = [\r\n    {\r\n      selector: 'node',\r\n      style: {\r\n        'background-color': '#000',\r\n        label: 'data(label)',\r\n        width: 50,\r\n        height: 50,\r\n        'font-size': 10,\r\n      },\r\n    },\r\n    {\r\n      selector: 'edge',\r\n      style: {\r\n        width: '1.5px',\r\n        'curve-style': 'bezier',\r\n        'line-color': '#ced6e0',\r\n        'line-opacity': '0.5',\r\n        'target-arrow-color': '#ced6e0',\r\n        'target-arrow-shape': 'vee',\r\n        'source-arrow-color': '#ced6e0',\r\n        'source-arrow-shape': 'vee',\r\n        'arrow-scale': 1,\r\n      },\r\n    },\r\n    {\r\n      selector: 'node:selected',\r\n      style: {\r\n        'border-width': '6px',\r\n        'border-color': '#AAD8FF',\r\n        // 'border-opacity': '0.8',\r\n        'background-color': '#77828C',\r\n        width: 50,\r\n        height: 50,\r\n      },\r\n    },\r\n    {\r\n      selector: 'edge:selected',\r\n      style: {\r\n        label: 'data(number)',\r\n        'line-color': 'blue',\r\n        'text-outline-color': '#fffa65',\r\n        'text-outline-width': 8,\r\n      },\r\n    },\r\n    {\r\n      selector: \"edge[type='extreme']\",\r\n      style: {\r\n        width: '10px',\r\n      },\r\n    },\r\n    {\r\n      selector: \"edge[type='hard']\",\r\n      style: {\r\n        width: '7px',\r\n      },\r\n    },\r\n    {\r\n      selector: \"edge[type='normal']\",\r\n      style: {\r\n        width: '4px',\r\n      },\r\n    },\r\n    {\r\n      selector: \"edge[type='light']\",\r\n      style: {\r\n        width: '2.5px',\r\n      },\r\n    },\r\n    {\r\n      selector: \"edge[type='none']\",\r\n      style: {\r\n        width: '0.9px',\r\n      },\r\n    },\r\n  ];\r\n\r\n  for (let i = 1; i < 15; i++) {\r\n    style.push({\r\n      selector: `#${i}`,\r\n      style: {\r\n        'background-image': `images/map/${i}.jpg`,\r\n        'background-fit': 'cover',\r\n      },\r\n    });\r\n  }\r\n\r\n  const layout = {\r\n    name: shape,\r\n    animate: true,\r\n    gravityRangeCompound: 1.5,\r\n    fit: true,\r\n    tile: true,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CytoscapeComponent\r\n        elements={element}\r\n        style={{ width: '100%', height: '100%' }}\r\n        stylesheet={style}\r\n        layout={layout}\r\n        zoomingEnabled={true}\r\n        boxSelectionEnabled={true}\r\n        maxZoom={5}\r\n        minZoom={1}\r\n        cy={(cy) => {\r\n          console.log('EVT', cy);\r\n\r\n          cy.on('tap', 'node', (evt) => {\r\n            const node = evt.target;\r\n            dispatch(characterOpen());\r\n            dispatch(characterSelected(node.data().id));\r\n          });\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton aria-label=\"delete\" onClick={handleClickOpen}>\r\n        <BsFillQuestionCircleFill />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">인물관계도 도움말</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            - Data Analysis 스위치로 두가지 버전의 인물관계도를 즐겨보세요.\r\n            <br />\r\n            <br /> - 사진을 클릭하시면 각 인물의 상세 정보를 확인할 수 있습니다.\r\n            <br />\r\n            <br /> - 간선을 클릭하시면 각 인물의 관계 정보나 함께 등장한 씬의\r\n            횟수를 <br /> &nbsp; 알 수 있습니다.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { PieChart, LineChart } from '@toast-ui/react-chart';\r\nimport '@toast-ui/chart/dist/toastui-chart.min.css';\r\n\r\nexport const FeelingChart = () => {\r\n  const feelingChart = useSelector((state) => state.character.feelingChart);\r\n  const data = {\r\n    categories: ['감정'],\r\n    series: [\r\n      {\r\n        name: '슬픔',\r\n        data: feelingChart['슬픔'],\r\n      },\r\n      {\r\n        name: '기쁨',\r\n        data: feelingChart['기쁨'],\r\n      },\r\n      {\r\n        name: '분노',\r\n        data: feelingChart['분노'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    chart: {\r\n      width: 'auto',\r\n      height: 'auto',\r\n      format: '1,000',\r\n      animation: {\r\n        duration: 500,\r\n      },\r\n    },\r\n    yAxis: {\r\n      title: 'Month',\r\n    },\r\n    xAxis: {\r\n      title: 'Amount',\r\n      min: 0,\r\n      max: 9000,\r\n      suffix: '$',\r\n    },\r\n    legend: {\r\n      visible: true,\r\n      showCheckbox: false,\r\n      align: 'right',\r\n    },\r\n    exportMenu: {\r\n      visible: false,\r\n    },\r\n    series: {\r\n      showLabel: true,\r\n      selectable: false,\r\n      clockwise: false,\r\n      dataLabels: {\r\n        visible: true,\r\n        anchor: 'outer',\r\n      },\r\n      radiusRange: {\r\n        inner: '40%',\r\n        outer: '100%',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PieChart\r\n        data={data}\r\n        options={options}\r\n        style={{ width: '60vw', height: '40vh' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AmountChart = ({ amount }) => {\r\n  const amountChart = useSelector((state) => state.character.amountChart);\r\n  const data = {\r\n    categories: [\r\n      '1',\r\n      '2',\r\n      '3',\r\n      '4',\r\n      '5',\r\n      '6',\r\n      '7',\r\n      '8',\r\n      '9',\r\n      '10',\r\n      '11',\r\n      '12',\r\n      '13',\r\n      '14',\r\n      '15',\r\n      '16',\r\n      '17',\r\n      '18',\r\n      '19',\r\n      '20',\r\n      '21',\r\n      '22',\r\n      '23',\r\n      '24',\r\n      '25',\r\n      '26',\r\n      '27',\r\n      '28',\r\n      '29',\r\n      '30',\r\n      '31',\r\n      '32',\r\n      '33',\r\n      '34',\r\n      '35',\r\n      '36',\r\n      '37',\r\n      '38',\r\n      '39',\r\n      '40',\r\n      '41',\r\n      '42',\r\n      '43',\r\n      '44',\r\n      '45',\r\n      '46',\r\n      '47',\r\n      '48',\r\n      '49',\r\n      '50',\r\n      '51',\r\n      '52',\r\n      '53',\r\n      '54',\r\n      '55',\r\n      '56',\r\n      '57',\r\n      '58',\r\n      '59',\r\n      '60',\r\n      '61',\r\n      '62',\r\n      '63',\r\n      '64',\r\n      '65',\r\n      '66',\r\n      '67',\r\n      '68',\r\n      '69',\r\n      '70',\r\n      '71',\r\n      '72',\r\n      '73',\r\n      '74',\r\n      '75',\r\n      '76',\r\n      '77',\r\n      '78',\r\n      '79',\r\n      '80',\r\n      '81',\r\n      '82',\r\n      '83',\r\n      '84',\r\n      '85',\r\n      '86',\r\n      '89',\r\n      '90',\r\n      '91',\r\n      '92',\r\n      '93',\r\n      '94',\r\n      '95',\r\n      '96',\r\n      '97',\r\n      '99',\r\n      '100',\r\n      '101',\r\n      '102',\r\n      '103',\r\n      '104',\r\n      '105',\r\n      '106',\r\n      '108',\r\n      '109',\r\n      '110',\r\n      '111',\r\n      '112',\r\n      '113',\r\n      '114',\r\n      '115',\r\n      '116',\r\n      '117',\r\n      '118',\r\n      '119',\r\n      '120',\r\n      '121',\r\n      '122',\r\n      '123',\r\n      '124',\r\n      '125',\r\n      '126',\r\n      '127',\r\n      '128',\r\n      '129',\r\n      '130',\r\n      '131',\r\n      '132',\r\n      '133',\r\n      '134',\r\n      '135',\r\n      '136',\r\n      '138',\r\n      '139',\r\n      '140',\r\n      '141',\r\n      '142',\r\n      '143',\r\n      '144',\r\n      '145',\r\n      '146',\r\n      '147',\r\n      '148',\r\n      '149',\r\n      '150',\r\n      '151',\r\n      '152',\r\n      '153',\r\n      '154',\r\n      '155',\r\n      '156',\r\n      '157',\r\n      '158',\r\n      '159',\r\n      '160',\r\n      '161',\r\n      '162',\r\n      '163',\r\n      '164',\r\n      '165',\r\n      '166',\r\n      '167',\r\n    ],\r\n    series: [\r\n      {\r\n        name: '분량',\r\n        data: amountChart,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    chart: {\r\n      width: 'auto',\r\n      height: 'auto',\r\n      // title: 'Monthly Revenue',\r\n      format: '1,000',\r\n    },\r\n    yAxis: {\r\n      title: 'Month',\r\n      scale: {\r\n        min: 0,\r\n        max: 119,\r\n        stepSize: 10,\r\n      },\r\n    },\r\n    xAxis: {\r\n      title: 'Amount',\r\n      min: 0,\r\n      max: 9000,\r\n      suffix: '$',\r\n    },\r\n    series: {\r\n      showLabel: true,\r\n    },\r\n    legend: {\r\n      visible: false,\r\n      showCheckbox: false,\r\n    },\r\n    exportMenu: {\r\n      visible: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LineChart\r\n        data={data}\r\n        options={options}\r\n        style={{ width: '60vw', height: '40vh' }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { FeelingChart, AmountChart } from './Chart';\r\nimport { feelingChart, amountChart } from '../../actions';\r\n\r\nimport axios from 'axios';\r\nimport baseUrl from '../../url/http';\r\n\r\nconst Character = () => {\r\n  const dispatch = useDispatch();\r\n  const selectedId = useSelector((state) => state.character.id);\r\n  const [data, setData] = useState([]);\r\n  const [youtube, setYoutube] = useState('');\r\n\r\n  //selectedName 가지고 백엔드에 캐릭터 전체 정보 요청 후 받아오기\r\n  useEffect(() => {\r\n    try {\r\n      axios.get(baseUrl + 'character/' + selectedId).then((response) => {\r\n        console.log('character-detail', response.data.data);\r\n        setData(response.data.data);\r\n        setYoutube(response.data.data.youtube.split('=')[1]);\r\n        console.log('youtube-key', response.data.data.youtube.split('=')[1]);\r\n        dispatch(feelingChart(response.data.data.emotion_dict));\r\n        dispatch(amountChart(response.data.data.stock_arr));\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [selectedId, dispatch]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '70vw',\r\n        margin: 'auto',\r\n        marginTop: '5vh',\r\n        padding: '5vw',\r\n        boxSizing: 'border-box',\r\n        textAlign: 'left',\r\n        background: '#fff',\r\n        color: '#000',\r\n        alignItems: 'start',\r\n      }}\r\n    >\r\n      <div\r\n        container\r\n        alignItems=\"flex-start\"\r\n        style={{ alignItems: 'start' }}\r\n        spacing={3}\r\n      >\r\n        <div item xs={12} style={{ textAlign: 'center' }}>\r\n          <img\r\n            alt={data.name}\r\n            src={`images/character/${selectedId}.png`}\r\n            style={{ width: '40%' }}\r\n          />\r\n          <h1>{data.name}</h1>\r\n          <Chip label={data.age} clickable color=\"primary\" />\r\n          <Chip label={data.job} clickable color=\"secondary\" />\r\n          <Chip label={data.qoute} clickable color=\"default\" />\r\n        </div>\r\n        <div item xs={6}>\r\n          <div>\r\n            <h2>주요 감정</h2>\r\n            <p>기쁨, 슬픔, 분노 감정 분석 결과입니다.</p>\r\n            <FeelingChart />\r\n          </div>\r\n        </div>\r\n        <div item xs={6}>\r\n          <div>\r\n            <h2>회차별 분량 변화</h2>\r\n            <p>한 회차에서 대사량이 가장 많았던 인물은 119회 말했습니다.</p>\r\n            <AmountChart />\r\n          </div>\r\n        </div>\r\n        <div item xs={6} style={{ margin: 'auto' }}>\r\n          <div style={{ width: '100%' }}>\r\n            <h2>사용 단어</h2>\r\n            <p>인물이 가장 많이 사용한 단어의 워드클라우드입니다.</p>\r\n            <div style={{ textAlign: 'center', margin: 'auto' }}>\r\n              <img\r\n                alt={data.name}\r\n                src={baseUrl + `image/word/${data.word_cloud}`}\r\n                style={{ width: '80%' }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div item xs={6}>\r\n          <div>\r\n            <h2>오분순삭</h2>\r\n            <p>유튜브에서 하이킥을 즐겨보세요!</p>\r\n            <div\r\n              style={{\r\n                overflow: 'hidden',\r\n                paddingBottom: '56.25%',\r\n                position: 'relative',\r\n                height: '0',\r\n              }}\r\n            >\r\n              <iframe\r\n                style={{\r\n                  left: '0',\r\n                  top: '0',\r\n                  height: '100%',\r\n                  width: '100%',\r\n                  position: 'absolute',\r\n                }}\r\n                width=\"600\"\r\n                height=\"400\"\r\n                src={`https://www.youtube.com/embed/${youtube}`}\r\n                title=\"YouTube video player\"\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { characterClose } from '../../actions';\r\nimport styled from 'styled-components';\r\n\r\nimport MapOrigin from '../../components/Map/MapOrigin';\r\nimport MapDA from '../../components/Map/MapDA';\r\nimport MapToolTip from '../../components/Dialog/MapTooltip';\r\nimport Character from '../../components/Character';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 70vw;\r\n  margin: auto;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: 'column';\r\n  }\r\n`;\r\n\r\nexport default function Characters() {\r\n  const dispatch = useDispatch();\r\n  const open = useSelector((state) => state.character.open);\r\n  const [isDA, setIsDA] = useState(false);\r\n\r\n  function handleChange() {\r\n    setIsDA(!isDA);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    dispatch(characterClose());\r\n  };\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '70vw',\r\n        height: '90vh',\r\n        margin: 'auto',\r\n      }}\r\n    >\r\n      <Container>\r\n        {!isDA && <p>우리가 익히 알고 있는 하이킥의 인물 관계입니다.</p>}\r\n        {isDA && (\r\n          <p>\r\n            대본 데이터 분석 결과 함께 있는 씬의 횟수로 집계된 하이킥의 인물\r\n            관계입니다.\r\n          </p>\r\n        )}\r\n        <div style={{ display: 'flex', justifySelf: 'right' }}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={isDA}\r\n                onChange={handleChange}\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Data Analysis\"\r\n          />\r\n          <MapToolTip />\r\n        </div>\r\n      </Container>\r\n      <>\r\n        {!isDA && <MapOrigin />}\r\n        {isDA && <MapDA />}\r\n\r\n        {open && (\r\n          <div>\r\n            <Dialog\r\n              fullScreen\r\n              open={open}\r\n              onClose={handleClose}\r\n              TransitionComponent={Transition}\r\n            >\r\n              <AppBar color=\"default\">\r\n                <Toolbar>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    onClick={handleClose}\r\n                    aria-label=\"close\"\r\n                  >\r\n                    <MdClose />\r\n                  </IconButton>\r\n                  <Typography variant=\"h6\">캐릭터 상세 정보</Typography>\r\n                </Toolbar>\r\n              </AppBar>\r\n              <Character />\r\n            </Dialog>\r\n          </div>\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  testUserName,\r\n  testSurveyNumber,\r\n  testEmotionCount,\r\n  testWordCount,\r\n  testCheckedWord,\r\n} from '../../actions';\r\nimport styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Nav>\r\n      <Logo to=\"/\">하이킥 완전정복</Logo>\r\n      <Menu>\r\n        <MenuLink to=\"/about\">소개</MenuLink>\r\n        <MenuLink to=\"/game\">추억의 뽑기게임</MenuLink>\r\n        <MenuLink\r\n          to=\"/survey\"\r\n          activeStyle\r\n          onClick={() => {\r\n            dispatch(testUserName(''));\r\n            dispatch(testWordCount(0));\r\n            dispatch(testSurveyNumber(0));\r\n            dispatch(testEmotionCount({ 기쁨: 0, 슬픔: 0, 분노: 0 }));\r\n            dispatch(testCheckedWord([]));\r\n          }}\r\n        >\r\n          나와 닮은 캐릭터\r\n        </MenuLink>\r\n        <MenuLink\r\n          to=\"/overdose\"\r\n          activeStyle\r\n          onClick={() => {\r\n            dispatch(testUserName(''));\r\n            dispatch(testWordCount(0));\r\n            dispatch(testSurveyNumber(0));\r\n            dispatch(testEmotionCount({ 기쁨: 0, 슬픔: 0, 분노: 0 }));\r\n            dispatch(testCheckedWord([]));\r\n          }}\r\n        >\r\n          하이킥 고사\r\n        </MenuLink>\r\n        <MenuLink to=\"/characters\" activeStyle>\r\n          인물관계도\r\n        </MenuLink>\r\n      </Menu>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nconst Nav = styled.nav`\r\n  height: 7vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem calc((100vw - 1000px) / 2);\r\n  border-bottom: solid lightgray 1px;\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n  padding: 1rem 0;\r\n  color: #000;\r\n  text-decoration: none;\r\n\r\n  font-weight: 900;\r\n  font-size: 1.5rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-weight: 800;\r\n    width: 100vw;\r\n    font-size: 1rem;\r\n    margin-left: 3vw;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MenuLink = styled(Link)`\r\n  color: #000;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #3f51b5;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-bottom: 1.5vh;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport About from './pages/Intro';\r\nimport TestMain from './pages/Test/TestMain';\r\nimport TestSurvey from './pages/Test/TestSurvey';\r\nimport TestRoading from './pages/Test/TestRoading';\r\nimport TestResult from './pages/Test/TestResult';\r\nimport TestOverdoseMain from './pages/Test/TestOverdoseMain';\r\nimport TestWord from './pages/Test/TestWord';\r\nimport TestOverdose from './pages/Test/TestOverdose';\r\nimport TestOverdoseResult from './pages/Test/TestOverdoseResult';\r\nimport GameMain from './pages/Game/GameMain';\r\nimport GameResult from './pages/Game/GameResult';\r\nimport GameAll from './pages/Game/GameAll';\r\nimport Characters from './pages/Characters';\r\nimport Navbar from './components/Navbar';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route exact path=\"/survey\" component={TestMain} />\r\n        <Route exact path=\"/survey/process\" component={TestSurvey} />\r\n        <Route exact path=\"/survey/word\" component={TestWord} />\r\n        <Route exact path=\"/survey/result\" component={TestResult} />\r\n        <Route exact path=\"/overdose\" component={TestOverdoseMain} />\r\n        <Route exact path=\"/overdose/process\" component={TestOverdose} />\r\n        <Route exact path=\"/overdose/result\" component={TestOverdoseResult} />\r\n        <Route exact path=\"/roading\" component={TestRoading} />\r\n        <Route exact path=\"/game\" component={GameMain} />\r\n        <Route exact path=\"/game/result\" component={GameResult} />\r\n        <Route exact path=\"/game/all\" component={GameAll} />\r\n        <Route path=\"/characters\" component={Characters} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const homeSelectReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case 'HOME':\r\n      return action.selected;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default homeSelectReducer;\r\n","const gameReducer = (\r\n  state = {\r\n    random: {\r\n      number: '0',\r\n      description: '',\r\n      question: ['', ''],\r\n      quote: '',\r\n    },\r\n    selected: {\r\n      key: '0',\r\n      number: '0',\r\n      nickname: '',\r\n      quote: '',\r\n      description: ['', ''],\r\n      quesiton: ['', ''],\r\n    },\r\n    open: false,\r\n    click: false,\r\n    show: false,\r\n  },\r\n  action,\r\n) => {\r\n  switch (action.type) {\r\n    case 'GAME_RANDOM':\r\n      return { ...state, random: action.payload };\r\n    case 'GAME_SELECTED':\r\n      return { ...state, selected: action.payload };\r\n    case 'GAME_OPEN':\r\n      return { ...state, open: true };\r\n    case 'GAME_CLOSE':\r\n      return { ...state, open: false };\r\n    case 'GAME_CLICK':\r\n      return { ...state, click: action.payload };\r\n    case 'GAME_SHOW':\r\n      return { ...state, show: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default gameReducer;\r\n","const testReducer = (\r\n  state = {\r\n    page: 1,\r\n    name: '',\r\n    overdoseCount: 0,\r\n    wordCount: 0,\r\n    checkedWord: [],\r\n    surveyNumber: 0,\r\n    emotionCount: { 기쁨: 0, 슬픔: 0, 분노: 0 },\r\n  },\r\n  action,\r\n) => {\r\n  switch (action.type) {\r\n    case 'TEST_PAGE':\r\n      return { ...state, page: action.payload };\r\n    case 'TEST_USERNAME':\r\n      return { ...state, name: action.name };\r\n    case 'TEST_OVERDOSECOUNT':\r\n      return { ...state, overdoseCount: action.number };\r\n    case 'TEST_SURVEYNUMBER':\r\n      return { ...state, surveyNumber: action.number };\r\n    case 'TEST_CHECKED_WORD':\r\n      return { ...state, checkedWord: action.info };\r\n    case 'TEST_WORD_COUNT':\r\n      return { ...state, wordCount: action.number };\r\n    case 'TEST_EMOTION_COUNT':\r\n      return { ...state, emotionCount: action.emotion };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default testReducer;\r\n","const characterReducer = (\r\n  state = {\r\n    id: 0,\r\n    open: false,\r\n    feelingChart: { 기쁨: 33, 슬픔: 33, 분노: 34 },\r\n    amountChart: new Array(162).fill(0),\r\n  },\r\n  action,\r\n) => {\r\n  switch (action.type) {\r\n    case 'CHARACTER_SELECTED':\r\n      return { ...state, id: action.payload };\r\n    case 'CHARACTER_OPEN':\r\n      return { ...state, open: true };\r\n    case 'CHARACTER_CLOSE':\r\n      return { ...state, open: false };\r\n    case 'FEELING_CHART':\r\n      return { ...state, feelingChart: action.payload };\r\n    case 'AMOUNT_CHART':\r\n      return { ...state, amountChart: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default characterReducer;\r\n","import homeSelectReducer from './homeSelect';\r\nimport gameReducer from './game';\r\nimport testReducer from './test';\r\nimport characterReducer from './character';\r\nimport { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  // localStorage에 저장합니다.\r\n  storage,\r\n  // auth, board, studio 3개의 reducer 중에 auth reducer만 localstorage에 저장합니다.\r\n  whitelist: ['test'],\r\n  // blacklist -> 그것만 제외합니다\r\n};\r\n\r\nconst allReducers = combineReducers({\r\n  homeSelect: homeSelectReducer,\r\n  game: gameReducer,\r\n  test: testReducer,\r\n  character: characterReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, allReducers);\r\n//export default allReducers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport reducers from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <SnackbarProvider>\r\n        <App />\r\n      </SnackbarProvider>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}